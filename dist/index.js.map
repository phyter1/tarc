{"version":3,"file":"index.js","sources":["../src/client/hook/useCachedRoute.ts","../src/client/hook/useRoute.ts","../src/client/context.tsx","../node_modules/strict-uri-encode/index.js","../node_modules/decode-uri-component/index.js","../node_modules/split-on-first/index.js","../node_modules/filter-obj/index.js","../node_modules/query-string/index.js","../src/router/router.ts"],"sourcesContent":["import { useCallback } from \"react\";\nimport {\n  atomFamily,\n  DefaultValue,\n  selectorFamily,\n  useRecoilState,\n} from \"recoil\";\nimport { Route } from \"../../types\";\n\ntype UseRoute = {\n  loading: boolean;\n  error: string | null;\n  data: any | null;\n};\nconst ls = () => {\n  try {\n    return localStorage;\n  } catch {\n    return;\n  }\n};\nconst routeCache = atomFamily<UseRoute, string>({\n  key: \"routeCache\",\n  default: {} as any,\n  effects: [\n    ({ setSelf, onSet, node }) => {\n      const item = ls()?.getItem(node.key);\n      if (item) {\n        setSelf(JSON.parse(item));\n      }\n      onSet((newItem) => {\n        if (newItem instanceof DefaultValue) {\n          ls()?.removeItem(node.key);\n        } else {\n          ls()?.setItem(node.key, JSON.stringify(newItem));\n        }\n      });\n    },\n  ],\n});\nconst routeLoading = selectorFamily<boolean, string>({\n  key: \"routeLoading\",\n  get:\n    (key) =>\n    ({ get }) =>\n      get(routeCache(key)).loading,\n  set:\n    (key) =>\n    ({ set }, loading) => {\n      set(routeCache(key), (prev) => ({\n        ...prev,\n        loading: loading as boolean,\n      }));\n    },\n});\nconst routeError = selectorFamily<string | null, string>({\n  key: \"routeError\",\n  get:\n    (key) =>\n    ({ get }) =>\n      get(routeCache(key)).error,\n  set:\n    (key) =>\n    ({ set }, error) => {\n      set(routeCache(key), (prev) => ({\n        ...prev,\n        error: error as string | null,\n      }));\n    },\n});\nconst routeData = selectorFamily<any | null, string>({\n  key: \"routeData\",\n  get:\n    (key) =>\n    ({ get }) =>\n      get(routeCache(key)).data,\n  set:\n    (key) =>\n    ({ set }, data) => {\n      set(routeCache(key), (prev) => ({\n        ...prev,\n        data: data as any | null,\n      }));\n    },\n});\nconst useCachedRoute = <R extends Route>(route: R) => {\n  type I = Parameters<ReturnType<R[\"client\"]>>[0];\n  type O = Awaited<ReturnType<Awaited<ReturnType<R[\"client\"]>>>>;\n  const name = route.apiUrl + route.path;\n  const client = route.client();\n  const [data, setData] = useRecoilState<O>(routeData(name));\n  const [error, setError] = useRecoilState(routeError(name));\n  const [loading, setLoading] = useRecoilState(routeLoading(name));\n  const callRoute = useCallback(\n    async (input: I) => {\n      setLoading(true);\n      let res: O;\n      try {\n        res = (await client(input)) as any;\n        setData(res);\n      } catch (e: any) {\n        setError(e);\n      } finally {\n        setLoading(false);\n        return res!;\n      }\n    },\n    [route]\n  );\n  return [callRoute, { data, error, loading }] as const;\n};\n\nexport default useCachedRoute;\n","import { useCallback, useState } from \"react\";\n\nconst useRoute = <C extends (i: any) => Promise<any>>(client: C) => {\n  const [data, setData] = useState<Awaited<ReturnType<C>>>();\n  const [error, setError] = useState<Error>();\n  const [loading, setLoading] = useState(false);\n  const callRoute = useCallback(\n    async (input: Parameters<C>[0]) => {\n      setLoading(true);\n      let res: Awaited<ReturnType<C>> | undefined = undefined;\n      try {\n        res = await client(input);\n        setData(res);\n      } catch (e: any) {\n        setError(e);\n      } finally {\n        setLoading(false);\n        return res;\n      }\n    },\n    [client]\n  );\n  return [callRoute, { data, error, loading }] as const;\n};\n\nexport default useRoute;\n","import type { FC, ReactNode } from \"react\";\nimport { Clients } from \"../types/coreTypes\";\nimport type { Router } from \"../router\";\nimport React, { createContext, useEffect, useRef } from \"react\";\n\nconst RouterContext = createContext<undefined>(undefined);\n\nconst RouterContextProvider: FC<{\n  children: ReactNode;\n  router?: Router;\n  clients?: Clients;\n}> = ({ children, clients, router }) => {\n  const mounted = useRef(false);\n  useEffect(() => {\n    if (!mounted.current && clients && router) {\n      mounted.current = true;\n      router.methodClients(clients);\n    }\n  }, [router, clients]);\n  return (\n    <RouterContext.Provider value={undefined}>\n      {children}\n    </RouterContext.Provider>\n  );\n};\n\nexport default RouterContextProvider;\n","'use strict';\nmodule.exports = str => encodeURIComponent(str).replace(/[!'()*]/g, x => `%${x.charCodeAt(0).toString(16).toUpperCase()}`);\n","'use strict';\nvar token = '%[a-f0-9]{2}';\nvar singleMatcher = new RegExp(token, 'gi');\nvar multiMatcher = new RegExp('(' + token + ')+', 'gi');\n\nfunction decodeComponents(components, split) {\n\ttry {\n\t\t// Try to decode the entire string first\n\t\treturn decodeURIComponent(components.join(''));\n\t} catch (err) {\n\t\t// Do nothing\n\t}\n\n\tif (components.length === 1) {\n\t\treturn components;\n\t}\n\n\tsplit = split || 1;\n\n\t// Split the array in 2 parts\n\tvar left = components.slice(0, split);\n\tvar right = components.slice(split);\n\n\treturn Array.prototype.concat.call([], decodeComponents(left), decodeComponents(right));\n}\n\nfunction decode(input) {\n\ttry {\n\t\treturn decodeURIComponent(input);\n\t} catch (err) {\n\t\tvar tokens = input.match(singleMatcher);\n\n\t\tfor (var i = 1; i < tokens.length; i++) {\n\t\t\tinput = decodeComponents(tokens, i).join('');\n\n\t\t\ttokens = input.match(singleMatcher);\n\t\t}\n\n\t\treturn input;\n\t}\n}\n\nfunction customDecodeURIComponent(input) {\n\t// Keep track of all the replacements and prefill the map with the `BOM`\n\tvar replaceMap = {\n\t\t'%FE%FF': '\\uFFFD\\uFFFD',\n\t\t'%FF%FE': '\\uFFFD\\uFFFD'\n\t};\n\n\tvar match = multiMatcher.exec(input);\n\twhile (match) {\n\t\ttry {\n\t\t\t// Decode as big chunks as possible\n\t\t\treplaceMap[match[0]] = decodeURIComponent(match[0]);\n\t\t} catch (err) {\n\t\t\tvar result = decode(match[0]);\n\n\t\t\tif (result !== match[0]) {\n\t\t\t\treplaceMap[match[0]] = result;\n\t\t\t}\n\t\t}\n\n\t\tmatch = multiMatcher.exec(input);\n\t}\n\n\t// Add `%C2` at the end of the map to make sure it does not replace the combinator before everything else\n\treplaceMap['%C2'] = '\\uFFFD';\n\n\tvar entries = Object.keys(replaceMap);\n\n\tfor (var i = 0; i < entries.length; i++) {\n\t\t// Replace all decoded components\n\t\tvar key = entries[i];\n\t\tinput = input.replace(new RegExp(key, 'g'), replaceMap[key]);\n\t}\n\n\treturn input;\n}\n\nmodule.exports = function (encodedURI) {\n\tif (typeof encodedURI !== 'string') {\n\t\tthrow new TypeError('Expected `encodedURI` to be of type `string`, got `' + typeof encodedURI + '`');\n\t}\n\n\ttry {\n\t\tencodedURI = encodedURI.replace(/\\+/g, ' ');\n\n\t\t// Try the built in decoder first\n\t\treturn decodeURIComponent(encodedURI);\n\t} catch (err) {\n\t\t// Fallback to a more advanced decoder\n\t\treturn customDecodeURIComponent(encodedURI);\n\t}\n};\n","'use strict';\n\nmodule.exports = (string, separator) => {\n\tif (!(typeof string === 'string' && typeof separator === 'string')) {\n\t\tthrow new TypeError('Expected the arguments to be of type `string`');\n\t}\n\n\tif (separator === '') {\n\t\treturn [string];\n\t}\n\n\tconst separatorIndex = string.indexOf(separator);\n\n\tif (separatorIndex === -1) {\n\t\treturn [string];\n\t}\n\n\treturn [\n\t\tstring.slice(0, separatorIndex),\n\t\tstring.slice(separatorIndex + separator.length)\n\t];\n};\n","'use strict';\nmodule.exports = function (obj, predicate) {\n\tvar ret = {};\n\tvar keys = Object.keys(obj);\n\tvar isArr = Array.isArray(predicate);\n\n\tfor (var i = 0; i < keys.length; i++) {\n\t\tvar key = keys[i];\n\t\tvar val = obj[key];\n\n\t\tif (isArr ? predicate.indexOf(key) !== -1 : predicate(key, val, obj)) {\n\t\t\tret[key] = val;\n\t\t}\n\t}\n\n\treturn ret;\n};\n","'use strict';\nconst strictUriEncode = require('strict-uri-encode');\nconst decodeComponent = require('decode-uri-component');\nconst splitOnFirst = require('split-on-first');\nconst filterObject = require('filter-obj');\n\nconst isNullOrUndefined = value => value === null || value === undefined;\n\nconst encodeFragmentIdentifier = Symbol('encodeFragmentIdentifier');\n\nfunction encoderForArrayFormat(options) {\n\tswitch (options.arrayFormat) {\n\t\tcase 'index':\n\t\t\treturn key => (result, value) => {\n\t\t\t\tconst index = result.length;\n\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined ||\n\t\t\t\t\t(options.skipNull && value === null) ||\n\t\t\t\t\t(options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [...result, [encode(key, options), '[', index, ']'].join('')];\n\t\t\t\t}\n\n\t\t\t\treturn [\n\t\t\t\t\t...result,\n\t\t\t\t\t[encode(key, options), '[', encode(index, options), ']=', encode(value, options)].join('')\n\t\t\t\t];\n\t\t\t};\n\n\t\tcase 'bracket':\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined ||\n\t\t\t\t\t(options.skipNull && value === null) ||\n\t\t\t\t\t(options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [...result, [encode(key, options), '[]'].join('')];\n\t\t\t\t}\n\n\t\t\t\treturn [...result, [encode(key, options), '[]=', encode(value, options)].join('')];\n\t\t\t};\n\n\t\tcase 'colon-list-separator':\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined ||\n\t\t\t\t\t(options.skipNull && value === null) ||\n\t\t\t\t\t(options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [...result, [encode(key, options), ':list='].join('')];\n\t\t\t\t}\n\n\t\t\t\treturn [...result, [encode(key, options), ':list=', encode(value, options)].join('')];\n\t\t\t};\n\n\t\tcase 'comma':\n\t\tcase 'separator':\n\t\tcase 'bracket-separator': {\n\t\t\tconst keyValueSep = options.arrayFormat === 'bracket-separator' ?\n\t\t\t\t'[]=' :\n\t\t\t\t'=';\n\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined ||\n\t\t\t\t\t(options.skipNull && value === null) ||\n\t\t\t\t\t(options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\t// Translate null to an empty string so that it doesn't serialize as 'null'\n\t\t\t\tvalue = value === null ? '' : value;\n\n\t\t\t\tif (result.length === 0) {\n\t\t\t\t\treturn [[encode(key, options), keyValueSep, encode(value, options)].join('')];\n\t\t\t\t}\n\n\t\t\t\treturn [[result, encode(value, options)].join(options.arrayFormatSeparator)];\n\t\t\t};\n\t\t}\n\n\t\tdefault:\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined ||\n\t\t\t\t\t(options.skipNull && value === null) ||\n\t\t\t\t\t(options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [...result, encode(key, options)];\n\t\t\t\t}\n\n\t\t\t\treturn [...result, [encode(key, options), '=', encode(value, options)].join('')];\n\t\t\t};\n\t}\n}\n\nfunction parserForArrayFormat(options) {\n\tlet result;\n\n\tswitch (options.arrayFormat) {\n\t\tcase 'index':\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tresult = /\\[(\\d*)\\]$/.exec(key);\n\n\t\t\t\tkey = key.replace(/\\[\\d*\\]$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = {};\n\t\t\t\t}\n\n\t\t\t\taccumulator[key][result[1]] = value;\n\t\t\t};\n\n\t\tcase 'bracket':\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tresult = /(\\[\\])$/.exec(key);\n\t\t\t\tkey = key.replace(/\\[\\]$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = [value];\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [].concat(accumulator[key], value);\n\t\t\t};\n\n\t\tcase 'colon-list-separator':\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tresult = /(:list)$/.exec(key);\n\t\t\t\tkey = key.replace(/:list$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = [value];\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [].concat(accumulator[key], value);\n\t\t\t};\n\n\t\tcase 'comma':\n\t\tcase 'separator':\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tconst isArray = typeof value === 'string' && value.includes(options.arrayFormatSeparator);\n\t\t\t\tconst isEncodedArray = (typeof value === 'string' && !isArray && decode(value, options).includes(options.arrayFormatSeparator));\n\t\t\t\tvalue = isEncodedArray ? decode(value, options) : value;\n\t\t\t\tconst newValue = isArray || isEncodedArray ? value.split(options.arrayFormatSeparator).map(item => decode(item, options)) : value === null ? value : decode(value, options);\n\t\t\t\taccumulator[key] = newValue;\n\t\t\t};\n\n\t\tcase 'bracket-separator':\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tconst isArray = /(\\[\\])$/.test(key);\n\t\t\t\tkey = key.replace(/\\[\\]$/, '');\n\n\t\t\t\tif (!isArray) {\n\t\t\t\t\taccumulator[key] = value ? decode(value, options) : value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst arrayValue = value === null ?\n\t\t\t\t\t[] :\n\t\t\t\t\tvalue.split(options.arrayFormatSeparator).map(item => decode(item, options));\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = arrayValue;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [].concat(accumulator[key], arrayValue);\n\t\t\t};\n\n\t\tdefault:\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [].concat(accumulator[key], value);\n\t\t\t};\n\t}\n}\n\nfunction validateArrayFormatSeparator(value) {\n\tif (typeof value !== 'string' || value.length !== 1) {\n\t\tthrow new TypeError('arrayFormatSeparator must be single character string');\n\t}\n}\n\nfunction encode(value, options) {\n\tif (options.encode) {\n\t\treturn options.strict ? strictUriEncode(value) : encodeURIComponent(value);\n\t}\n\n\treturn value;\n}\n\nfunction decode(value, options) {\n\tif (options.decode) {\n\t\treturn decodeComponent(value);\n\t}\n\n\treturn value;\n}\n\nfunction keysSorter(input) {\n\tif (Array.isArray(input)) {\n\t\treturn input.sort();\n\t}\n\n\tif (typeof input === 'object') {\n\t\treturn keysSorter(Object.keys(input))\n\t\t\t.sort((a, b) => Number(a) - Number(b))\n\t\t\t.map(key => input[key]);\n\t}\n\n\treturn input;\n}\n\nfunction removeHash(input) {\n\tconst hashStart = input.indexOf('#');\n\tif (hashStart !== -1) {\n\t\tinput = input.slice(0, hashStart);\n\t}\n\n\treturn input;\n}\n\nfunction getHash(url) {\n\tlet hash = '';\n\tconst hashStart = url.indexOf('#');\n\tif (hashStart !== -1) {\n\t\thash = url.slice(hashStart);\n\t}\n\n\treturn hash;\n}\n\nfunction extract(input) {\n\tinput = removeHash(input);\n\tconst queryStart = input.indexOf('?');\n\tif (queryStart === -1) {\n\t\treturn '';\n\t}\n\n\treturn input.slice(queryStart + 1);\n}\n\nfunction parseValue(value, options) {\n\tif (options.parseNumbers && !Number.isNaN(Number(value)) && (typeof value === 'string' && value.trim() !== '')) {\n\t\tvalue = Number(value);\n\t} else if (options.parseBooleans && value !== null && (value.toLowerCase() === 'true' || value.toLowerCase() === 'false')) {\n\t\tvalue = value.toLowerCase() === 'true';\n\t}\n\n\treturn value;\n}\n\nfunction parse(query, options) {\n\toptions = Object.assign({\n\t\tdecode: true,\n\t\tsort: true,\n\t\tarrayFormat: 'none',\n\t\tarrayFormatSeparator: ',',\n\t\tparseNumbers: false,\n\t\tparseBooleans: false\n\t}, options);\n\n\tvalidateArrayFormatSeparator(options.arrayFormatSeparator);\n\n\tconst formatter = parserForArrayFormat(options);\n\n\t// Create an object with no prototype\n\tconst ret = Object.create(null);\n\n\tif (typeof query !== 'string') {\n\t\treturn ret;\n\t}\n\n\tquery = query.trim().replace(/^[?#&]/, '');\n\n\tif (!query) {\n\t\treturn ret;\n\t}\n\n\tfor (const param of query.split('&')) {\n\t\tif (param === '') {\n\t\t\tcontinue;\n\t\t}\n\n\t\tlet [key, value] = splitOnFirst(options.decode ? param.replace(/\\+/g, ' ') : param, '=');\n\n\t\t// Missing `=` should be `null`:\n\t\t// http://w3.org/TR/2012/WD-url-20120524/#collect-url-parameters\n\t\tvalue = value === undefined ? null : ['comma', 'separator', 'bracket-separator'].includes(options.arrayFormat) ? value : decode(value, options);\n\t\tformatter(decode(key, options), value, ret);\n\t}\n\n\tfor (const key of Object.keys(ret)) {\n\t\tconst value = ret[key];\n\t\tif (typeof value === 'object' && value !== null) {\n\t\t\tfor (const k of Object.keys(value)) {\n\t\t\t\tvalue[k] = parseValue(value[k], options);\n\t\t\t}\n\t\t} else {\n\t\t\tret[key] = parseValue(value, options);\n\t\t}\n\t}\n\n\tif (options.sort === false) {\n\t\treturn ret;\n\t}\n\n\treturn (options.sort === true ? Object.keys(ret).sort() : Object.keys(ret).sort(options.sort)).reduce((result, key) => {\n\t\tconst value = ret[key];\n\t\tif (Boolean(value) && typeof value === 'object' && !Array.isArray(value)) {\n\t\t\t// Sort object keys, not values\n\t\t\tresult[key] = keysSorter(value);\n\t\t} else {\n\t\t\tresult[key] = value;\n\t\t}\n\n\t\treturn result;\n\t}, Object.create(null));\n}\n\nexports.extract = extract;\nexports.parse = parse;\n\nexports.stringify = (object, options) => {\n\tif (!object) {\n\t\treturn '';\n\t}\n\n\toptions = Object.assign({\n\t\tencode: true,\n\t\tstrict: true,\n\t\tarrayFormat: 'none',\n\t\tarrayFormatSeparator: ','\n\t}, options);\n\n\tvalidateArrayFormatSeparator(options.arrayFormatSeparator);\n\n\tconst shouldFilter = key => (\n\t\t(options.skipNull && isNullOrUndefined(object[key])) ||\n\t\t(options.skipEmptyString && object[key] === '')\n\t);\n\n\tconst formatter = encoderForArrayFormat(options);\n\n\tconst objectCopy = {};\n\n\tfor (const key of Object.keys(object)) {\n\t\tif (!shouldFilter(key)) {\n\t\t\tobjectCopy[key] = object[key];\n\t\t}\n\t}\n\n\tconst keys = Object.keys(objectCopy);\n\n\tif (options.sort !== false) {\n\t\tkeys.sort(options.sort);\n\t}\n\n\treturn keys.map(key => {\n\t\tconst value = object[key];\n\n\t\tif (value === undefined) {\n\t\t\treturn '';\n\t\t}\n\n\t\tif (value === null) {\n\t\t\treturn encode(key, options);\n\t\t}\n\n\t\tif (Array.isArray(value)) {\n\t\t\tif (value.length === 0 && options.arrayFormat === 'bracket-separator') {\n\t\t\t\treturn encode(key, options) + '[]';\n\t\t\t}\n\n\t\t\treturn value\n\t\t\t\t.reduce(formatter(key), [])\n\t\t\t\t.join('&');\n\t\t}\n\n\t\treturn encode(key, options) + '=' + encode(value, options);\n\t}).filter(x => x.length > 0).join('&');\n};\n\nexports.parseUrl = (url, options) => {\n\toptions = Object.assign({\n\t\tdecode: true\n\t}, options);\n\n\tconst [url_, hash] = splitOnFirst(url, '#');\n\n\treturn Object.assign(\n\t\t{\n\t\t\turl: url_.split('?')[0] || '',\n\t\t\tquery: parse(extract(url), options)\n\t\t},\n\t\toptions && options.parseFragmentIdentifier && hash ? {fragmentIdentifier: decode(hash, options)} : {}\n\t);\n};\n\nexports.stringifyUrl = (object, options) => {\n\toptions = Object.assign({\n\t\tencode: true,\n\t\tstrict: true,\n\t\t[encodeFragmentIdentifier]: true\n\t}, options);\n\n\tconst url = removeHash(object.url).split('?')[0] || '';\n\tconst queryFromUrl = exports.extract(object.url);\n\tconst parsedQueryFromUrl = exports.parse(queryFromUrl, {sort: false});\n\n\tconst query = Object.assign(parsedQueryFromUrl, object.query);\n\tlet queryString = exports.stringify(query, options);\n\tif (queryString) {\n\t\tqueryString = `?${queryString}`;\n\t}\n\n\tlet hash = getHash(object.url);\n\tif (object.fragmentIdentifier) {\n\t\thash = `#${options[encodeFragmentIdentifier] ? encode(object.fragmentIdentifier, options) : object.fragmentIdentifier}`;\n\t}\n\n\treturn `${url}${queryString}${hash}`;\n};\n\nexports.pick = (input, filter, options) => {\n\toptions = Object.assign({\n\t\tparseFragmentIdentifier: true,\n\t\t[encodeFragmentIdentifier]: false\n\t}, options);\n\n\tconst {url, query, fragmentIdentifier} = exports.parseUrl(input, options);\n\treturn exports.stringifyUrl({\n\t\turl,\n\t\tquery: filterObject(query, filter),\n\t\tfragmentIdentifier\n\t}, options);\n};\n\nexports.exclude = (input, filter, options) => {\n\tconst exclusionFilter = Array.isArray(filter) ? key => !filter.includes(key) : (key, value) => !filter(key, value);\n\n\treturn exports.pick(input, exclusionFilter, options);\n};\n","import type { NextApiRequest, NextApiResponse, NextApiHandler } from \"next\";\nimport type {\n  Client,\n  ClientMap,\n  CreateContext,\n  Handler,\n  HandlerMap,\n  Middleware,\n  ZO,\n} from \"../types/coreTypes\";\nimport { z } from \"zod\";\nimport querystring from \"query-string\";\n\nconst ClientMap: ClientMap<ZO, ZO> = new Map([\n  [\n    \"get\",\n    ({ apiUrl, path, inputShape, outputShape }) =>\n      async (input) => {\n        const reqInput = inputShape.parse(input);\n        const output = await fetch(\n          apiUrl +\n            path +\n            \"?\" +\n            querystring.stringify(reqInput, { encode: true }),\n          {\n            method: \"GET\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n            },\n          }\n        );\n        return outputShape.parse(await output.json());\n      },\n  ],\n  [\n    \"post\",\n    ({ apiUrl, path, inputShape, outputShape }) =>\n      async (input) => {\n        const reqInput = inputShape.parse(input);\n        const res = await fetch(apiUrl + path, {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify(reqInput),\n        });\n        const reqOutput = await res.json();\n        return outputShape.parse(reqOutput);\n      },\n  ],\n]);\n\nconst HandlerMap: HandlerMap<ZO, ZO, ZO> = new Map([\n  [\n    \"get\",\n    ({ inputShape, outputShape, context, handler }) =>\n      async (req, res) => {\n        const input = inputShape.parse(req.query);\n        const output = await handler({ req, res, context, input });\n        res.status(200).json(outputShape.parse(output));\n      },\n  ],\n  [\n    \"post\",\n    ({ inputShape, outputShape, context, handler }) =>\n      async (req, res) => {\n        const input = inputShape.parse(req.body);\n        const output = await handler({ req, res, context, input });\n        res.status(200).json(outputShape.parse(output));\n      },\n  ],\n]);\n\nconst Router = <C extends ZO>({\n  contextShape,\n  apiUrl = \"/api/\",\n}: {\n  contextShape: C;\n  apiUrl?: string;\n}) => {\n  let createContext: CreateContext<z.infer<C>>;\n  const context = (create: CreateContext<z.infer<C>>) => {\n    createContext = create;\n  };\n  const getCreateContext = () => {\n    if (!createContext) {\n      throw new Error(\"createContext not set\");\n    }\n    return createContext;\n  };\n  const methodClients = (clients: ClientMap<ZO, ZO>) => {\n    for (const [method, client] of clients) {\n      ClientMap.set(method, client);\n    }\n  };\n  const methodHandlers = (handlers: HandlerMap<ZO, ZO, ZO>) => {\n    for (const [method, handler] of handlers) {\n      HandlerMap.set(method, handler);\n    }\n  };\n  const route = <I extends ZO, O extends ZO>({\n    method,\n    path,\n    inputShape,\n    outputShape,\n  }: {\n    method: \"get\" | \"post\";\n    path: string;\n    inputShape: I;\n    outputShape: O;\n  }) => {\n    let routeMiddleware: Middleware[] = [];\n\n    const middleware = (...fns: Middleware[]) => {\n      routeMiddleware = [...routeMiddleware, ...fns];\n    };\n\n    const clientShape = z\n      .function()\n      .args(inputShape)\n      .returns(z.promise(outputShape));\n\n    const serviceShape = z\n      .function()\n      .args(\n        z.object({\n          input: inputShape,\n          context: contextShape,\n          req: z.any(),\n          res: z.any(),\n        })\n      )\n      .returns(z.promise(outputShape));\n\n    const methodHandler = HandlerMap.get(method) ?? HandlerMap.get(\"post\")!;\n\n    const handler = (h: Handler<C, I, O>): NextApiHandler<z.infer<O>> => {\n      return async (req: NextApiRequest, res: NextApiResponse<z.infer<O>>) => {\n        for (const m of routeMiddleware || []) {\n          await m(req, res);\n        }\n\n        const context = await getCreateContext()(req, res);\n\n        if (!context) {\n          res.status(500).json({ status: \"error\", message: \"no context\" });\n          return;\n        }\n        return methodHandler({\n          inputShape,\n          outputShape,\n          context: await createContext(req, res),\n          handler: h as any,\n        })(req, res);\n      };\n    };\n\n    const client = (): Client<I, O> => {\n      const c = (ClientMap.get(method) ?? ClientMap.get(\"post\")!)({\n        apiUrl,\n        path,\n        inputShape,\n        outputShape,\n      });\n      return c as any;\n    };\n\n    return {\n      apiUrl,\n      path,\n      routeMiddleware,\n      inputShape,\n      outputShape,\n      clientShape,\n      serviceShape,\n      contextShape,\n      handler,\n      client,\n      middleware,\n    };\n  };\n  return { route, context, methodHandlers, methodClients };\n};\n\ntype Router = ReturnType<typeof Router>;\n\nexport default Router;\n"],"names":["ls","localStorage","routeCache","atomFamily","key","default","effects","setSelf","onSet","node","item","getItem","JSON","parse","newItem","DefaultValue","removeItem","setItem","stringify","routeLoading","selectorFamily","get","loading","set","prev","routeError","error","routeData","data","useCachedRoute","route","name","apiUrl","path","client","setData","useRecoilState","setError","setLoading","useCallback","async","input","res","e","useRoute","useState","RouterContext","createContext","undefined","RouterContextProvider","children","clients","router","mounted","useRef","useEffect","current","methodClients","React","createElement","Provider","value","strictUriEncode","str","encodeURIComponent","replace","x","charCodeAt","toString","toUpperCase","singleMatcher","RegExp","multiMatcher","decodeComponents","components","split","decodeURIComponent","join","err","length","left","slice","right","Array","prototype","concat","call","decode","tokens","match","i","decodeUriComponent","encodedURI","TypeError","replaceMap","exec","result","entries","Object","keys","customDecodeURIComponent","splitOnFirst","string","separator","separatorIndex","indexOf","filterObj","obj","predicate","ret","isArr","isArray","val","require$$0","decodeComponent","require$$1","require$$2","filterObject","require$$3","encodeFragmentIdentifier","Symbol","validateArrayFormatSeparator","encode","options","strict","keysSorter","sort","a","b","Number","map","removeHash","hashStart","extract","queryStart","parseValue","parseNumbers","isNaN","trim","parseBooleans","toLowerCase","query","assign","arrayFormat","arrayFormatSeparator","formatter","accumulator","includes","isEncodedArray","newValue","test","arrayValue","parserForArrayFormat","create","param","k","reduce","Boolean","exports","object","shouldFilter","skipNull","skipEmptyString","index","keyValueSep","encoderForArrayFormat","objectCopy","filter","parseUrl","url","url_","hash","parseFragmentIdentifier","fragmentIdentifier","stringifyUrl","queryFromUrl","parsedQueryFromUrl","queryString","getHash","pick","exclude","exclusionFilter","ClientMap","Map","inputShape","outputShape","reqInput","output","fetch","querystring","method","headers","json","body","reqOutput","HandlerMap","context","handler","req","status","Router","contextShape","routeMiddleware","clientShape","z","function","args","returns","promise","serviceShape","any","methodHandler","h","m","Error","getCreateContext","message","middleware","fns","methodHandlers","handlers"],"mappings":"yNAcA,MAAMA,EAAK,KACT,IACE,OAAOC,YAGR,CAFC,MACA,MACD,GAEGC,EAAaC,EAA6B,CAC9CC,IAAK,aACLC,QAAS,CAAS,EAClBC,QAAS,CACP,EAAGC,UAASC,QAAOC,WACjB,MAAMC,EAAOV,KAAMW,QAAQF,EAAKL,KAC5BM,GACFH,EAAQK,KAAKC,MAAMH,IAErBF,GAAOM,IACDA,aAAmBC,EACrBf,KAAMgB,WAAWP,EAAKL,KAEtBJ,KAAMiB,QAAQR,EAAKL,IAAKQ,KAAKM,UAAUJ,GACxC,GACD,KAIFK,EAAeC,EAAgC,CACnDhB,IAAK,eACLiB,IACGjB,GACD,EAAGiB,SACDA,EAAInB,EAAWE,IAAMkB,QACzBC,IACGnB,GACD,EAAGmB,OAAOD,KACRC,EAAIrB,EAAWE,IAAOoB,IAAU,IAC3BA,EACHF,QAASA,KACR,IAGHG,EAAaL,EAAsC,CACvDhB,IAAK,aACLiB,IACGjB,GACD,EAAGiB,SACDA,EAAInB,EAAWE,IAAMsB,MACzBH,IACGnB,GACD,EAAGmB,OAAOG,KACRH,EAAIrB,EAAWE,IAAOoB,IAAU,IAC3BA,EACHE,MAAOA,KACN,IAGHC,EAAYP,EAAmC,CACnDhB,IAAK,YACLiB,IACGjB,GACD,EAAGiB,SACDA,EAAInB,EAAWE,IAAMwB,KACzBL,IACGnB,GACD,EAAGmB,OAAOK,KACRL,EAAIrB,EAAWE,IAAOoB,IAAU,IAC3BA,EACHI,KAAMA,KACL,IAGHC,EAAmCC,IAGvC,MAAMC,EAAOD,EAAME,OAASF,EAAMG,KAC5BC,EAASJ,EAAMI,UACdN,EAAMO,GAAWC,EAAkBT,EAAUI,KAC7CL,EAAOW,GAAYD,EAAeX,EAAWM,KAC7CT,EAASgB,GAAcF,EAAejB,EAAaY,IAiB1D,MAAO,CAhBWQ,GAChBC,MAAOC,IAEL,IAAIC,EADJJ,GAAW,GAEX,IACEI,QAAaR,EAAOO,GACpBN,EAAQO,EAMT,CALC,MAAOC,GACPN,EAASM,EACV,CAAS,QAER,OADAL,GAAW,GACJI,CACR,IAEH,CAACZ,IAEgB,CAAEF,OAAMF,QAAOJ,WAAmB,EC3GjDsB,EAAgDV,IACpD,MAAON,EAAMO,GAAWU,KACjBnB,EAAOW,GAAYQ,KACnBvB,EAASgB,GAAcO,GAAS,GAiBvC,MAAO,CAhBWN,GAChBC,MAAOC,IAEL,IAAIC,EADJJ,GAAW,GAEX,IACEI,QAAYR,EAAOO,GACnBN,EAAQO,EAMT,CALC,MAAOC,GACPN,EAASM,EACV,CAAS,QAER,OADAL,GAAW,GACJI,CACR,IAEH,CAACR,IAEgB,CAAEN,OAAMF,QAAOJ,WAAmB,ECjBjDwB,EAAgBC,OAAyBC,GAEzCC,EAID,EAAGC,WAAUC,UAASC,aACzB,MAAMC,EAAUC,GAAO,GAOvB,OANAC,GAAU,MACHF,EAAQG,SAAWL,GAAWC,IACjCC,EAAQG,SAAU,EAClBJ,EAAOK,cAAcN,GACtB,GACA,CAACC,EAAQD,IAEVO,EAAAC,cAACb,EAAcc,SAAQ,CAACC,WAAOb,GAC5BE,EAEH,WCtBJY,EAAiBC,GAAOC,mBAAmBD,GAAKE,QAAQ,YAAYC,GAAK,IAAIA,EAAEC,WAAW,GAAGC,SAAS,IAAIC,kBCCtGC,EAAgB,IAAIC,OADZ,eAC0B,MAClCC,EAAe,IAAID,OAAO,kBAAoB,MAElD,SAASE,EAAiBC,EAAYC,GACrC,IAEC,OAAOC,mBAAmBF,EAAWG,KAAK,IAG1C,CAFC,MAAOC,GAER,CAED,GAA0B,IAAtBJ,EAAWK,OACd,OAAOL,EAGRC,EAAQA,GAAS,EAGjB,IAAIK,EAAON,EAAWO,MAAM,EAAGN,GAC3BO,EAAQR,EAAWO,MAAMN,GAE7B,OAAOQ,MAAMC,UAAUC,OAAOC,KAAK,GAAIb,EAAiBO,GAAOP,EAAiBS,GACjF,CAEA,SAASK,EAAO9C,GACf,IACC,OAAOmC,mBAAmBnC,EAW1B,CAVC,MAAOqC,GAGR,IAFA,IAAIU,EAAS/C,EAAMgD,MAAMnB,GAEhBoB,EAAI,EAAGA,EAAIF,EAAOT,OAAQW,IAGlCF,GAFA/C,EAAQgC,EAAiBe,EAAQE,GAAGb,KAAK,KAE1BY,MAAMnB,GAGtB,OAAO7B,CACP,CACF,KAuCAkD,EAAiB,SAAUC,GAC1B,GAA0B,iBAAfA,EACV,MAAM,IAAIC,UAAU,6DAA+DD,EAAa,KAGjG,IAIC,OAHAA,EAAaA,EAAW3B,QAAQ,MAAO,KAGhCW,mBAAmBgB,EAI1B,CAHC,MAAOd,GAER,OAjDF,SAAkCrC,GAQjC,IANA,IAAIqD,EAAa,CAChB,SAAU,KACV,SAAU,MAGPL,EAAQjB,EAAauB,KAAKtD,GACvBgD,GAAO,CACb,IAECK,EAAWL,EAAM,IAAMb,mBAAmBa,EAAM,GAOhD,CANC,MAAOX,GACR,IAAIkB,EAAST,EAAOE,EAAM,IAEtBO,IAAWP,EAAM,KACpBK,EAAWL,EAAM,IAAMO,EAExB,CAEDP,EAAQjB,EAAauB,KAAKtD,EAC1B,CAGDqD,EAAW,OAAS,IAIpB,IAFA,IAAIG,EAAUC,OAAOC,KAAKL,GAEjBJ,EAAI,EAAGA,EAAIO,EAAQlB,OAAQW,IAAK,CAExC,IAAItF,EAAM6F,EAAQP,GAClBjD,EAAQA,EAAMwB,QAAQ,IAAIM,OAAOnE,EAAK,KAAM0F,EAAW1F,GACvD,CAED,OAAOqC,CACR,CAcS2D,CAAyBR,EAChC,CACF,EC3FAS,EAAiB,CAACC,EAAQC,KACzB,GAAwB,iBAAXD,GAA4C,iBAAdC,EAC1C,MAAM,IAAIV,UAAU,iDAGrB,GAAkB,KAAdU,EACH,MAAO,CAACD,GAGT,MAAME,EAAiBF,EAAOG,QAAQF,GAEtC,OAAwB,IAApBC,EACI,CAACF,GAGF,CACNA,EAAOrB,MAAM,EAAGuB,GAChBF,EAAOrB,MAAMuB,EAAiBD,EAAUxB,QACxC,ECnBF2B,EAAiB,SAAUC,EAAKC,GAK/B,IAJA,IAAIC,EAAM,CAAA,EACNV,EAAOD,OAAOC,KAAKQ,GACnBG,EAAQ3B,MAAM4B,QAAQH,GAEjBlB,EAAI,EAAGA,EAAIS,EAAKpB,OAAQW,IAAK,CACrC,IAAItF,EAAM+F,EAAKT,GACXsB,EAAML,EAAIvG,IAEV0G,GAAoC,IAA5BF,EAAUH,QAAQrG,GAAcwG,EAAUxG,EAAK4G,EAAKL,MAC/DE,EAAIzG,GAAO4G,EAEZ,CAED,OAAOH,CACR,eCfA,MAAM/C,EAAkBmD,EAClBC,EAAkBC,EAClBd,EAAee,EACfC,EAAeC,EAIfC,EAA2BC,OAAO,4BAgNxC,SAASC,EAA6B5D,GACrC,GAAqB,iBAAVA,GAAuC,IAAjBA,EAAMkB,OACtC,MAAM,IAAIc,UAAU,uDAErB,CAED,SAAS6B,EAAO7D,EAAO8D,GACtB,OAAIA,EAAQD,OACJC,EAAQC,OAAS9D,EAAgBD,GAASG,mBAAmBH,GAG9DA,CACP,CAED,SAAS0B,EAAO1B,EAAO8D,GACtB,OAAIA,EAAQpC,OACJ2B,EAAgBrD,GAGjBA,CACP,CAED,SAASgE,EAAWpF,GACnB,OAAI0C,MAAM4B,QAAQtE,GACVA,EAAMqF,OAGO,iBAAVrF,EACHoF,EAAW3B,OAAOC,KAAK1D,IAC5BqF,MAAK,CAACC,EAAGC,IAAMC,OAAOF,GAAKE,OAAOD,KAClCE,KAAI9H,GAAOqC,EAAMrC,KAGbqC,CACP,CAED,SAAS0F,EAAW1F,GACnB,MAAM2F,EAAY3F,EAAMgE,QAAQ,KAKhC,OAJmB,IAAf2B,IACH3F,EAAQA,EAAMwC,MAAM,EAAGmD,IAGjB3F,CACP,CAYD,SAAS4F,EAAQ5F,GAEhB,MAAM6F,GADN7F,EAAQ0F,EAAW1F,IACMgE,QAAQ,KACjC,OAAoB,IAAhB6B,EACI,GAGD7F,EAAMwC,MAAMqD,EAAa,EAChC,CAED,SAASC,EAAW1E,EAAO8D,GAO1B,OANIA,EAAQa,eAAiBP,OAAOQ,MAAMR,OAAOpE,KAA6B,iBAAVA,GAAuC,KAAjBA,EAAM6E,OAC/F7E,EAAQoE,OAAOpE,IACL8D,EAAQgB,eAA2B,OAAV9E,GAA2C,SAAxBA,EAAM+E,eAAoD,UAAxB/E,EAAM+E,gBAC9F/E,EAAgC,SAAxBA,EAAM+E,eAGR/E,CACP,CAED,SAAShD,EAAMgI,EAAOlB,GAUrBF,GATAE,EAAUzB,OAAO4C,OAAO,CACvBvD,QAAQ,EACRuC,MAAM,EACNiB,YAAa,OACbC,qBAAsB,IACtBR,cAAc,EACdG,eAAe,GACbhB,IAEkCqB,sBAErC,MAAMC,EA7LP,SAA8BtB,GAC7B,IAAI3B,EAEJ,OAAQ2B,EAAQoB,aACf,IAAK,QACJ,MAAO,CAAC3I,EAAKyD,EAAOqF,KACnBlD,EAAS,aAAaD,KAAK3F,GAE3BA,EAAMA,EAAI6D,QAAQ,WAAY,IAEzB+B,QAKoBhD,IAArBkG,EAAY9I,KACf8I,EAAY9I,GAAO,IAGpB8I,EAAY9I,GAAK4F,EAAO,IAAMnC,GAR7BqF,EAAY9I,GAAOyD,CAQe,EAGrC,IAAK,UACJ,MAAO,CAACzD,EAAKyD,EAAOqF,KACnBlD,EAAS,UAAUD,KAAK3F,GACxBA,EAAMA,EAAI6D,QAAQ,QAAS,IAEtB+B,OAKoBhD,IAArBkG,EAAY9I,GAKhB8I,EAAY9I,GAAO,GAAGiF,OAAO6D,EAAY9I,GAAMyD,GAJ9CqF,EAAY9I,GAAO,CAACyD,GALpBqF,EAAY9I,GAAOyD,CASiC,EAGvD,IAAK,uBACJ,MAAO,CAACzD,EAAKyD,EAAOqF,KACnBlD,EAAS,WAAWD,KAAK3F,GACzBA,EAAMA,EAAI6D,QAAQ,SAAU,IAEvB+B,OAKoBhD,IAArBkG,EAAY9I,GAKhB8I,EAAY9I,GAAO,GAAGiF,OAAO6D,EAAY9I,GAAMyD,GAJ9CqF,EAAY9I,GAAO,CAACyD,GALpBqF,EAAY9I,GAAOyD,CASiC,EAGvD,IAAK,QACL,IAAK,YACJ,MAAO,CAACzD,EAAKyD,EAAOqF,KACnB,MAAMnC,EAA2B,iBAAVlD,GAAsBA,EAAMsF,SAASxB,EAAQqB,sBAC9DI,EAAmC,iBAAVvF,IAAuBkD,GAAWxB,EAAO1B,EAAO8D,GAASwB,SAASxB,EAAQqB,sBACzGnF,EAAQuF,EAAiB7D,EAAO1B,EAAO8D,GAAW9D,EAClD,MAAMwF,EAAWtC,GAAWqC,EAAiBvF,EAAMc,MAAMgD,EAAQqB,sBAAsBd,KAAIxH,GAAQ6E,EAAO7E,EAAMiH,KAAsB,OAAV9D,EAAiBA,EAAQ0B,EAAO1B,EAAO8D,GACnKuB,EAAY9I,GAAOiJ,CAAQ,EAG7B,IAAK,oBACJ,MAAO,CAACjJ,EAAKyD,EAAOqF,KACnB,MAAMnC,EAAU,UAAUuC,KAAKlJ,GAG/B,GAFAA,EAAMA,EAAI6D,QAAQ,QAAS,KAEtB8C,EAEJ,YADAmC,EAAY9I,GAAOyD,EAAQ0B,EAAO1B,EAAO8D,GAAW9D,GAIrD,MAAM0F,EAAuB,OAAV1F,EAClB,GACAA,EAAMc,MAAMgD,EAAQqB,sBAAsBd,KAAIxH,GAAQ6E,EAAO7E,EAAMiH,UAE3C3E,IAArBkG,EAAY9I,GAKhB8I,EAAY9I,GAAO,GAAGiF,OAAO6D,EAAY9I,GAAMmJ,GAJ9CL,EAAY9I,GAAOmJ,CAIsC,EAG5D,QACC,MAAO,CAACnJ,EAAKyD,EAAOqF,UACMlG,IAArBkG,EAAY9I,GAKhB8I,EAAY9I,GAAO,GAAGiF,OAAO6D,EAAY9I,GAAMyD,GAJ9CqF,EAAY9I,GAAOyD,CAIiC,EAGxD,CAyFkB2F,CAAqB7B,GAGjCd,EAAMX,OAAOuD,OAAO,MAE1B,GAAqB,iBAAVZ,EACV,OAAOhC,EAKR,KAFAgC,EAAQA,EAAMH,OAAOzE,QAAQ,SAAU,KAGtC,OAAO4C,EAGR,IAAK,MAAM6C,KAASb,EAAMlE,MAAM,KAAM,CACrC,GAAc,KAAV+E,EACH,SAGD,IAAKtJ,EAAKyD,GAASwC,EAAasB,EAAQpC,OAASmE,EAAMzF,QAAQ,MAAO,KAAOyF,EAAO,KAIpF7F,OAAkBb,IAAVa,EAAsB,KAAO,CAAC,QAAS,YAAa,qBAAqBsF,SAASxB,EAAQoB,aAAelF,EAAQ0B,EAAO1B,EAAO8D,GACvIsB,EAAU1D,EAAOnF,EAAKuH,GAAU9D,EAAOgD,EACvC,CAED,IAAK,MAAMzG,KAAO8F,OAAOC,KAAKU,GAAM,CACnC,MAAMhD,EAAQgD,EAAIzG,GAClB,GAAqB,iBAAVyD,GAAgC,OAAVA,EAChC,IAAK,MAAM8F,KAAKzD,OAAOC,KAAKtC,GAC3BA,EAAM8F,GAAKpB,EAAW1E,EAAM8F,GAAIhC,QAGjCd,EAAIzG,GAAOmI,EAAW1E,EAAO8D,EAE9B,CAED,OAAqB,IAAjBA,EAAQG,KACJjB,IAGiB,IAAjBc,EAAQG,KAAgB5B,OAAOC,KAAKU,GAAKiB,OAAS5B,OAAOC,KAAKU,GAAKiB,KAAKH,EAAQG,OAAO8B,QAAO,CAAC5D,EAAQ5F,KAC9G,MAAMyD,EAAQgD,EAAIzG,GAQlB,OAPIyJ,QAAQhG,IAA2B,iBAAVA,IAAuBsB,MAAM4B,QAAQlD,GAEjEmC,EAAO5F,GAAOyH,EAAWhE,GAEzBmC,EAAO5F,GAAOyD,EAGRmC,CAAM,GACXE,OAAOuD,OAAO,MACjB,CAEDK,EAAAzB,QAAkBA,EAClByB,EAAAjJ,MAAgBA,EAEhBiJ,EAAA5I,UAAoB,CAAC6I,EAAQpC,KAC5B,IAAKoC,EACJ,MAAO,GAURtC,GAPAE,EAAUzB,OAAO4C,OAAO,CACvBpB,QAAQ,EACRE,QAAQ,EACRmB,YAAa,OACbC,qBAAsB,KACpBrB,IAEkCqB,sBAErC,MAAMgB,EAAe5J,GACnBuH,EAAQsC,UAnXwBpG,MAmXMkG,EAAO3J,IAC7CuH,EAAQuC,iBAAmC,KAAhBH,EAAO3J,GAG9B6I,EAnXP,SAA+BtB,GAC9B,OAAQA,EAAQoB,aACf,IAAK,QACJ,OAAO3I,GAAO,CAAC4F,EAAQnC,KACtB,MAAMsG,EAAQnE,EAAOjB,OAErB,YACW/B,IAAVa,GACC8D,EAAQsC,UAAsB,OAAVpG,GACpB8D,EAAQuC,iBAA6B,KAAVrG,EAErBmC,EAGM,OAAVnC,EACI,IAAImC,EAAQ,CAAC0B,EAAOtH,EAAKuH,GAAU,IAAKwC,EAAO,KAAKtF,KAAK,KAG1D,IACHmB,EACH,CAAC0B,EAAOtH,EAAKuH,GAAU,IAAKD,EAAOyC,EAAOxC,GAAU,KAAMD,EAAO7D,EAAO8D,IAAU9C,KAAK,IACvF,EAGH,IAAK,UACJ,OAAOzE,GAAO,CAAC4F,EAAQnC,SAEXb,IAAVa,GACC8D,EAAQsC,UAAsB,OAAVpG,GACpB8D,EAAQuC,iBAA6B,KAAVrG,EAErBmC,EAGM,OAAVnC,EACI,IAAImC,EAAQ,CAAC0B,EAAOtH,EAAKuH,GAAU,MAAM9C,KAAK,KAG/C,IAAImB,EAAQ,CAAC0B,EAAOtH,EAAKuH,GAAU,MAAOD,EAAO7D,EAAO8D,IAAU9C,KAAK,KAGhF,IAAK,uBACJ,OAAOzE,GAAO,CAAC4F,EAAQnC,SAEXb,IAAVa,GACC8D,EAAQsC,UAAsB,OAAVpG,GACpB8D,EAAQuC,iBAA6B,KAAVrG,EAErBmC,EAGM,OAAVnC,EACI,IAAImC,EAAQ,CAAC0B,EAAOtH,EAAKuH,GAAU,UAAU9C,KAAK,KAGnD,IAAImB,EAAQ,CAAC0B,EAAOtH,EAAKuH,GAAU,SAAUD,EAAO7D,EAAO8D,IAAU9C,KAAK,KAGnF,IAAK,QACL,IAAK,YACL,IAAK,oBAAqB,CACzB,MAAMuF,EAAsC,sBAAxBzC,EAAQoB,YAC3B,MACA,IAED,OAAO3I,GAAO,CAAC4F,EAAQnC,SAEXb,IAAVa,GACC8D,EAAQsC,UAAsB,OAAVpG,GACpB8D,EAAQuC,iBAA6B,KAAVrG,EAErBmC,GAIRnC,EAAkB,OAAVA,EAAiB,GAAKA,EAER,IAAlBmC,EAAOjB,OACH,CAAC,CAAC2C,EAAOtH,EAAKuH,GAAUyC,EAAa1C,EAAO7D,EAAO8D,IAAU9C,KAAK,KAGnE,CAAC,CAACmB,EAAQ0B,EAAO7D,EAAO8D,IAAU9C,KAAK8C,EAAQqB,uBAEvD,CAED,QACC,OAAO5I,GAAO,CAAC4F,EAAQnC,SAEXb,IAAVa,GACC8D,EAAQsC,UAAsB,OAAVpG,GACpB8D,EAAQuC,iBAA6B,KAAVrG,EAErBmC,EAGM,OAAVnC,EACI,IAAImC,EAAQ0B,EAAOtH,EAAKuH,IAGzB,IAAI3B,EAAQ,CAAC0B,EAAOtH,EAAKuH,GAAU,IAAKD,EAAO7D,EAAO8D,IAAU9C,KAAK,KAG/E,CA6QkBwF,CAAsB1C,GAElC2C,EAAa,CAAA,EAEnB,IAAK,MAAMlK,KAAO8F,OAAOC,KAAK4D,GACxBC,EAAa5J,KACjBkK,EAAWlK,GAAO2J,EAAO3J,IAI3B,MAAM+F,EAAOD,OAAOC,KAAKmE,GAMzB,OAJqB,IAAjB3C,EAAQG,MACX3B,EAAK2B,KAAKH,EAAQG,MAGZ3B,EAAK+B,KAAI9H,IACf,MAAMyD,EAAQkG,EAAO3J,GAErB,YAAc4C,IAAVa,EACI,GAGM,OAAVA,EACI6D,EAAOtH,EAAKuH,GAGhBxC,MAAM4B,QAAQlD,GACI,IAAjBA,EAAMkB,QAAwC,sBAAxB4C,EAAQoB,YAC1BrB,EAAOtH,EAAKuH,GAAW,KAGxB9D,EACL+F,OAAOX,EAAU7I,GAAM,IACvByE,KAAK,KAGD6C,EAAOtH,EAAKuH,GAAW,IAAMD,EAAO7D,EAAO8D,EAAQ,IACxD4C,QAAOrG,GAAKA,EAAEa,OAAS,IAAGF,KAAK,IAAI,EAGvCiF,EAAAU,SAAmB,CAACC,EAAK9C,KACxBA,EAAUzB,OAAO4C,OAAO,CACvBvD,QAAQ,GACNoC,GAEH,MAAO+C,EAAMC,GAAQtE,EAAaoE,EAAK,KAEvC,OAAOvE,OAAO4C,OACb,CACC2B,IAAKC,EAAK/F,MAAM,KAAK,IAAM,GAC3BkE,MAAOhI,EAAMwH,EAAQoC,GAAM9C,IAE5BA,GAAWA,EAAQiD,yBAA2BD,EAAO,CAACE,mBAAoBtF,EAAOoF,EAAMhD,IAAY,CAAE,EACrG,EAGFmC,EAAAgB,aAAuB,CAACf,EAAQpC,KAC/BA,EAAUzB,OAAO4C,OAAO,CACvBpB,QAAQ,EACRE,QAAQ,EACRL,CAACA,IAA2B,GAC1BI,GAEH,MAAM8C,EAAMtC,EAAW4B,EAAOU,KAAK9F,MAAM,KAAK,IAAM,GAC9CoG,EAAejB,EAAQzB,QAAQ0B,EAAOU,KACtCO,EAAqBlB,EAAQjJ,MAAMkK,EAAc,CAACjD,MAAM,IAExDe,EAAQ3C,OAAO4C,OAAOkC,EAAoBjB,EAAOlB,OACvD,IAAIoC,EAAcnB,EAAQ5I,UAAU2H,EAAOlB,GACvCsD,IACHA,EAAc,IAAIA,KAGnB,IAAIN,EAlML,SAAiBF,GAChB,IAAIE,EAAO,GACX,MAAMvC,EAAYqC,EAAIhE,QAAQ,KAK9B,OAJmB,IAAf2B,IACHuC,EAAOF,EAAIxF,MAAMmD,IAGXuC,CACP,CA0LWO,CAAQnB,EAAOU,KAK1B,OAJIV,EAAOc,qBACVF,EAAO,IAAIhD,EAAQJ,GAA4BG,EAAOqC,EAAOc,mBAAoBlD,GAAWoC,EAAOc,sBAG7F,GAAGJ,IAAMQ,IAAcN,GAAM,EAGrCb,EAAAqB,KAAe,CAAC1I,EAAO8H,EAAQ5C,KAC9BA,EAAUzB,OAAO4C,OAAO,CACvB8B,yBAAyB,EACzBrD,CAACA,IAA2B,GAC1BI,GAEH,MAAM8C,IAACA,EAAG5B,MAAEA,EAAKgC,mBAAEA,GAAsBf,EAAQU,SAAS/H,EAAOkF,GACjE,OAAOmC,EAAQgB,aAAa,CAC3BL,MACA5B,MAAOxB,EAAawB,EAAO0B,GAC3BM,sBACElD,EAAQ,EAGZmC,EAAAsB,QAAkB,CAAC3I,EAAO8H,EAAQ5C,KACjC,MAAM0D,EAAkBlG,MAAM4B,QAAQwD,GAAUnK,IAAQmK,EAAOpB,SAAS/I,GAAO,CAACA,EAAKyD,KAAW0G,EAAOnK,EAAKyD,GAE5G,OAAOiG,EAAQqB,KAAK1I,EAAO4I,EAAiB1D,EAAQ,MCndrD,MAAM2D,EAA+B,IAAIC,IAAI,CAC3C,CACE,MACA,EAAGvJ,SAAQC,OAAMuJ,aAAYC,iBAC3BjJ,MAAOC,IACL,MAAMiJ,EAAWF,EAAW3K,MAAM4B,GAC5BkJ,QAAeC,MACnB5J,EACEC,EACA,IACA4J,EAAY3K,UAAUwK,EAAU,CAAEhE,QAAQ,IAC5C,CACEoE,OAAQ,MACRC,QAAS,CACP,eAAgB,sBAItB,OAAON,EAAY5K,YAAY8K,EAAOK,OAAO,GAGnD,CACE,OACA,EAAGhK,SAAQC,OAAMuJ,aAAYC,iBAC3BjJ,MAAOC,IACL,MAAMiJ,EAAWF,EAAW3K,MAAM4B,GAC5BC,QAAYkJ,MAAM5J,EAASC,EAAM,CACrC6J,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBE,KAAMrL,KAAKM,UAAUwK,KAEjBQ,QAAkBxJ,EAAIsJ,OAC5B,OAAOP,EAAY5K,MAAMqL,EAAU,KAKrCC,EAAqC,IAAIZ,IAAI,CACjD,CACE,MACA,EAAGC,aAAYC,cAAaW,UAASC,aACnC7J,MAAO8J,EAAK5J,KACV,MAAMD,EAAQ+I,EAAW3K,MAAMyL,EAAIzD,OAC7B8C,QAAeU,EAAQ,CAAEC,MAAK5J,MAAK0J,UAAS3J,UAClDC,EAAI6J,OAAO,KAAKP,KAAKP,EAAY5K,MAAM8K,GAAQ,GAGrD,CACE,OACA,EAAGH,aAAYC,cAAaW,UAASC,aACnC7J,MAAO8J,EAAK5J,KACV,MAAMD,EAAQ+I,EAAW3K,MAAMyL,EAAIL,MAC7BN,QAAeU,EAAQ,CAAEC,MAAK5J,MAAK0J,UAAS3J,UAClDC,EAAI6J,OAAO,KAAKP,KAAKP,EAAY5K,MAAM8K,GAAQ,KAKjDa,EAAS,EACbC,eACAzK,SAAS,YAKT,IAAIe,EAqGJ,MAAO,CAAEjB,MAjFK,EACZgK,SACA7J,OACAuJ,aACAC,kBAOA,IAAIiB,EAAgC,GAEpC,MAIMC,EAAcC,EACjBC,WACAC,KAAKtB,GACLuB,QAAQH,EAAEI,QAAQvB,IAEfwB,EAAeL,EAClBC,WACAC,KACCF,EAAE7C,OAAO,CACPtH,MAAO+I,EACPY,QAASK,EACTH,IAAKM,EAAEM,MACPxK,IAAKkK,EAAEM,SAGVH,QAAQH,EAAEI,QAAQvB,IAEf0B,EAAgBhB,EAAW9K,IAAIyK,IAAWK,EAAW9K,IAAI,QAiC/D,MAAO,CACLW,SACAC,OACAyK,kBACAlB,aACAC,cACAkB,cACAM,eACAR,eACAJ,QAxCee,GACR5K,MAAO8J,EAAqB5J,KACjC,IAAK,MAAM2K,KAAKX,GAAmB,SAC3BW,EAAEf,EAAK5J,GAKf,QA5DmB,MACvB,IAAKK,EACH,MAAM,IAAIuK,MAAM,yBAElB,OAAOvK,CAAa,EAsDMwK,GAAmBjB,EAAK5J,GAM9C,OAAOyK,EAAc,CACnB3B,aACAC,cACAW,cAAerJ,EAAcuJ,EAAK5J,GAClC2J,QAASe,GAJJD,CAKJb,EAAK5J,GARNA,EAAI6J,OAAO,KAAKP,KAAK,CAAEO,OAAQ,QAASiB,QAAS,cAQvC,EAwBdtL,OApBa,KACFoJ,EAAUjK,IAAIyK,IAAWR,EAAUjK,IAAI,SAAU,CAC1DW,SACAC,OACAuJ,aACAC,gBAgBFgC,WAjEiB,IAAIC,KACrBhB,EAAkB,IAAIA,KAAoBgB,EAAI,EAiE/C,EAEatB,QApGC3C,IACf1G,EAAgB0G,CAAM,EAmGCkE,eAtFDC,IACtB,IAAK,MAAO9B,EAAQO,KAAYuB,EAC9BzB,EAAW5K,IAAIuK,EAAQO,EACxB,EAmFsC5I,cA3FlBN,IACrB,IAAK,MAAO2I,EAAQ5J,KAAWiB,EAC7BmI,EAAU/J,IAAIuK,EAAQ5J,EACvB,EAwFqD"}