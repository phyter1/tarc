{"version":3,"file":"index.js","sources":["../../src/client/hook/useCachedRoute.ts","../../src/client/hook/useRoute.ts","../../src/client/context.tsx"],"sourcesContent":["import { useCallback } from \"react\";\nimport {\n  atomFamily,\n  DefaultValue,\n  selectorFamily,\n  useRecoilState,\n} from \"recoil\";\nimport { Route } from \"../../types\";\n\ntype UseRoute = {\n  loading: boolean;\n  error: string | null;\n  data: any | null;\n};\nconst ls = () => {\n  try {\n    return localStorage;\n  } catch {\n    return;\n  }\n};\nconst routeCache = atomFamily<UseRoute, string>({\n  key: \"routeCache\",\n  default: {} as any,\n  effects: [\n    ({ setSelf, onSet, node }) => {\n      const item = ls()?.getItem(node.key);\n      if (item) {\n        setSelf(JSON.parse(item));\n      }\n      onSet((newItem) => {\n        if (newItem instanceof DefaultValue) {\n          ls()?.removeItem(node.key);\n        } else {\n          ls()?.setItem(node.key, JSON.stringify(newItem));\n        }\n      });\n    },\n  ],\n});\nconst routeLoading = selectorFamily<boolean, string>({\n  key: \"routeLoading\",\n  get:\n    (key) =>\n    ({ get }) =>\n      get(routeCache(key)).loading,\n  set:\n    (key) =>\n    ({ set }, loading) => {\n      set(routeCache(key), (prev) => ({\n        ...prev,\n        loading: loading as boolean,\n      }));\n    },\n});\nconst routeError = selectorFamily<string | null, string>({\n  key: \"routeError\",\n  get:\n    (key) =>\n    ({ get }) =>\n      get(routeCache(key)).error,\n  set:\n    (key) =>\n    ({ set }, error) => {\n      set(routeCache(key), (prev) => ({\n        ...prev,\n        error: error as string | null,\n      }));\n    },\n});\nconst routeData = selectorFamily<any | null, string>({\n  key: \"routeData\",\n  get:\n    (key) =>\n    ({ get }) =>\n      get(routeCache(key)).data,\n  set:\n    (key) =>\n    ({ set }, data) => {\n      set(routeCache(key), (prev) => ({\n        ...prev,\n        data: data as any | null,\n      }));\n    },\n});\nconst useCachedRoute = <R extends Route>(route: R) => {\n  type I = Parameters<ReturnType<R[\"client\"]>>[0];\n  type O = Awaited<ReturnType<Awaited<ReturnType<R[\"client\"]>>>>;\n  const name = route.apiUrl + route.path;\n  const client = route.client();\n  const [data, setData] = useRecoilState<O>(routeData(name));\n  const [error, setError] = useRecoilState(routeError(name));\n  const [loading, setLoading] = useRecoilState(routeLoading(name));\n  const callRoute = useCallback(\n    async (input: I) => {\n      setLoading(true);\n      let res: O;\n      try {\n        res = (await client(input)) as any;\n        setData(res);\n      } catch (e: any) {\n        setError(e);\n      } finally {\n        setLoading(false);\n        return res!;\n      }\n    },\n    [route]\n  );\n  return [callRoute, { data, error, loading }] as const;\n};\n\nexport default useCachedRoute;\n","import { useCallback, useState } from \"react\";\n\nconst useRoute = <C extends (i: any) => Promise<any>>(client: C) => {\n  const [data, setData] = useState<Awaited<ReturnType<C>>>();\n  const [error, setError] = useState<Error>();\n  const [loading, setLoading] = useState(false);\n  const callRoute = useCallback(\n    async (input: Parameters<C>[0]) => {\n      setLoading(true);\n      let res: Awaited<ReturnType<C>> | undefined = undefined;\n      try {\n        res = await client(input);\n        setData(res);\n      } catch (e: any) {\n        setError(e);\n      } finally {\n        setLoading(false);\n        return res;\n      }\n    },\n    [client]\n  );\n  return [callRoute, { data, error, loading }] as const;\n};\n\nexport default useRoute;\n","import type { FC, ReactNode } from \"react\";\nimport { Clients } from \"../types/coreTypes\";\nimport type { Router } from \"../router\";\nimport React, { createContext, useEffect, useRef } from \"react\";\n\nconst RouterContext = createContext<undefined>(undefined);\n\nconst RouterContextProvider: FC<{\n  children: ReactNode;\n  router?: Router;\n  clients?: Clients;\n}> = ({ children, clients, router }) => {\n  const mounted = useRef(false);\n  useEffect(() => {\n    if (!mounted.current && clients && router) {\n      mounted.current = true;\n      router.methodClients(clients);\n    }\n  }, [router, clients]);\n  return (\n    <RouterContext.Provider value={undefined}>\n      {children}\n    </RouterContext.Provider>\n  );\n};\n\nexport default RouterContextProvider;\n"],"names":["ls","localStorage","routeCache","atomFamily","key","default","effects","setSelf","onSet","node","item","getItem","JSON","parse","newItem","DefaultValue","removeItem","setItem","stringify","routeLoading","selectorFamily","get","loading","set","prev","routeError","error","routeData","data","useCachedRoute","route","name","apiUrl","path","client","setData","useRecoilState","setError","setLoading","useCallback","async","input","res","e","useRoute","useState","RouterContext","createContext","undefined","RouterContextProvider","children","clients","router","mounted","useRef","useEffect","current","methodClients","React","createElement","Provider","value"],"mappings":"iMAcA,MAAMA,EAAK,KACT,IACE,OAAOC,YAGR,CAFC,MACA,MACD,GAEGC,EAAaC,EAA6B,CAC9CC,IAAK,aACLC,QAAS,CAAS,EAClBC,QAAS,CACP,EAAGC,UAASC,QAAOC,WACjB,MAAMC,EAAOV,KAAMW,QAAQF,EAAKL,KAC5BM,GACFH,EAAQK,KAAKC,MAAMH,IAErBF,GAAOM,IACDA,aAAmBC,EACrBf,KAAMgB,WAAWP,EAAKL,KAEtBJ,KAAMiB,QAAQR,EAAKL,IAAKQ,KAAKM,UAAUJ,GACxC,GACD,KAIFK,EAAeC,EAAgC,CACnDhB,IAAK,eACLiB,IACGjB,GACD,EAAGiB,SACDA,EAAInB,EAAWE,IAAMkB,QACzBC,IACGnB,GACD,EAAGmB,OAAOD,KACRC,EAAIrB,EAAWE,IAAOoB,IAAU,IAC3BA,EACHF,QAASA,KACR,IAGHG,EAAaL,EAAsC,CACvDhB,IAAK,aACLiB,IACGjB,GACD,EAAGiB,SACDA,EAAInB,EAAWE,IAAMsB,MACzBH,IACGnB,GACD,EAAGmB,OAAOG,KACRH,EAAIrB,EAAWE,IAAOoB,IAAU,IAC3BA,EACHE,MAAOA,KACN,IAGHC,EAAYP,EAAmC,CACnDhB,IAAK,YACLiB,IACGjB,GACD,EAAGiB,SACDA,EAAInB,EAAWE,IAAMwB,KACzBL,IACGnB,GACD,EAAGmB,OAAOK,KACRL,EAAIrB,EAAWE,IAAOoB,IAAU,IAC3BA,EACHI,KAAMA,KACL,IAGHC,EAAmCC,IAGvC,MAAMC,EAAOD,EAAME,OAASF,EAAMG,KAC5BC,EAASJ,EAAMI,UACdN,EAAMO,GAAWC,EAAkBT,EAAUI,KAC7CL,EAAOW,GAAYD,EAAeX,EAAWM,KAC7CT,EAASgB,GAAcF,EAAejB,EAAaY,IAiB1D,MAAO,CAhBWQ,GAChBC,MAAOC,IAEL,IAAIC,EADJJ,GAAW,GAEX,IACEI,QAAaR,EAAOO,GACpBN,EAAQO,EAMT,CALC,MAAOC,GACPN,EAASM,EACV,CAAS,QAER,OADAL,GAAW,GACJI,CACR,IAEH,CAACZ,IAEgB,CAAEF,OAAMF,QAAOJ,WAAmB,EC3GjDsB,EAAgDV,IACpD,MAAON,EAAMO,GAAWU,KACjBnB,EAAOW,GAAYQ,KACnBvB,EAASgB,GAAcO,GAAS,GAiBvC,MAAO,CAhBWN,GAChBC,MAAOC,IAEL,IAAIC,EADJJ,GAAW,GAEX,IACEI,QAAYR,EAAOO,GACnBN,EAAQO,EAMT,CALC,MAAOC,GACPN,EAASM,EACV,CAAS,QAER,OADAL,GAAW,GACJI,CACR,IAEH,CAACR,IAEgB,CAAEN,OAAMF,QAAOJ,WAAmB,ECjBjDwB,EAAgBC,OAAyBC,GAEzCC,EAID,EAAGC,WAAUC,UAASC,aACzB,MAAMC,EAAUC,GAAO,GAOvB,OANAC,GAAU,MACHF,EAAQG,SAAWL,GAAWC,IACjCC,EAAQG,SAAU,EAClBJ,EAAOK,cAAcN,GACtB,GACA,CAACC,EAAQD,IAEVO,EAAAC,cAACb,EAAcc,SAAQ,CAACC,WAAOb,GAC5BE,EAEH"}