import e,{useCallback as t,useState as r,createContext as a,useRef as o,useEffect as n}from"react";import{atomFamily as c,DefaultValue as i,selectorFamily as l,useRecoilState as s}from"recoil";const d=()=>{try{return localStorage}catch{return}},u=c({key:"routeCache",default:{},effects:[({setSelf:e,onSet:t,node:r})=>{const a=d()?.getItem(r.key);a&&e(JSON.parse(a)),t((e=>{e instanceof i?d()?.removeItem(r.key):d()?.setItem(r.key,JSON.stringify(e))}))}]}),y=l({key:"routeLoading",get:e=>({get:t})=>t(u(e)).loading,set:e=>({set:t},r)=>{t(u(e),(e=>({...e,loading:r})))}}),g=l({key:"routeError",get:e=>({get:t})=>t(u(e)).error,set:e=>({set:t},r)=>{t(u(e),(e=>({...e,error:r})))}}),f=l({key:"routeData",get:e=>({get:t})=>t(u(e)).data,set:e=>({set:t},r)=>{t(u(e),(e=>({...e,data:r})))}}),m=e=>{const r=e.apiUrl+e.path,a=e.client(),[o,n]=s(f(r)),[c,i]=s(g(r)),[l,d]=s(y(r));return[t((async e=>{let t;d(!0);try{t=await a(e),n(t)}catch(e){i(e)}finally{return d(!1),t}}),[e]),{data:o,error:c,loading:l}]},h=e=>{const[a,o]=r(),[n,c]=r(),[i,l]=r(!1);return[t((async t=>{let r;l(!0);try{r=await e(t),o(r)}catch(e){c(e)}finally{return l(!1),r}}),[e]),{data:a,error:n,loading:i}]},k=a(void 0),p=({children:t,clients:r,router:a})=>{const c=o(!1);return n((()=>{!c.current&&r&&a&&(c.current=!0,a.methodClients(r))}),[a,r]),e.createElement(k.Provider,{value:void 0},t)};export{p as RouterContextProvider,m as useCachedRoute,h as useRoute};
//# sourceMappingURL=index.js.map
