{"version":3,"file":"index.js","sources":["../../src/client/hook/useCachedRoute.ts","../../node_modules/strict-uri-encode/index.js","../../node_modules/decode-uri-component/index.js","../../node_modules/split-on-first/index.js","../../node_modules/filter-obj/index.js","../../node_modules/query-string/index.js","../../src/router/router.ts","../../src/client/context.tsx","../../src/client/hook/useRoute.ts"],"sourcesContent":["import { useCallback } from \"react\";\nimport {\n  atomFamily,\n  DefaultValue,\n  selectorFamily,\n  useRecoilState,\n} from \"recoil\";\nimport { Route } from \"../../types\";\n\ntype UseRoute = {\n  loading: boolean;\n  error: string | null;\n  data: any | null;\n};\nconst ls = () => {\n  try {\n    return localStorage;\n  } catch {\n    return;\n  }\n};\nconst routeCache = atomFamily<UseRoute, string>({\n  key: \"routeCache\",\n  default: {} as any,\n  effects: [\n    ({ setSelf, onSet, node }) => {\n      const item = ls()?.getItem(node.key);\n      if (item) {\n        setSelf(JSON.parse(item));\n      }\n      onSet((newItem) => {\n        if (newItem instanceof DefaultValue) {\n          ls()?.removeItem(node.key);\n        } else {\n          ls()?.setItem(node.key, JSON.stringify(newItem));\n        }\n      });\n    },\n  ],\n});\nconst routeLoading = selectorFamily<boolean, string>({\n  key: \"routeLoading\",\n  get:\n    (key) =>\n    ({ get }) =>\n      get(routeCache(key)).loading,\n  set:\n    (key) =>\n    ({ set }, loading) => {\n      set(routeCache(key), (prev) => ({\n        ...prev,\n        loading: loading as boolean,\n      }));\n    },\n});\nconst routeError = selectorFamily<string | null, string>({\n  key: \"routeError\",\n  get:\n    (key) =>\n    ({ get }) =>\n      get(routeCache(key)).error,\n  set:\n    (key) =>\n    ({ set }, error) => {\n      set(routeCache(key), (prev) => ({\n        ...prev,\n        error: error as string | null,\n      }));\n    },\n});\nconst routeData = selectorFamily<any | null, string>({\n  key: \"routeData\",\n  get:\n    (key) =>\n    ({ get }) =>\n      get(routeCache(key)).data,\n  set:\n    (key) =>\n    ({ set }, data) => {\n      set(routeCache(key), (prev) => ({\n        ...prev,\n        data: data as any | null,\n      }));\n    },\n});\nconst useCachedRoute = <R extends Route>(route: R) => {\n  type I = Parameters<ReturnType<R[\"client\"]>>[0];\n  type O = Awaited<ReturnType<Awaited<ReturnType<R[\"client\"]>>>>;\n  const name = route.apiUrl + route.path;\n  const client = route.client();\n  const [data, setData] = useRecoilState<O>(routeData(name));\n  const [error, setError] = useRecoilState(routeError(name));\n  const [loading, setLoading] = useRecoilState(routeLoading(name));\n  const callRoute = useCallback(\n    async (input: I) => {\n      setLoading(true);\n      let res: O;\n      try {\n        res = (await client(input)) as any;\n        setData(res);\n      } catch (e: any) {\n        setError(e);\n      } finally {\n        setLoading(false);\n        return res!;\n      }\n    },\n    [route]\n  );\n  return [callRoute, { data, error, loading }] as const;\n};\n\nexport default useCachedRoute;\n","'use strict';\nmodule.exports = str => encodeURIComponent(str).replace(/[!'()*]/g, x => `%${x.charCodeAt(0).toString(16).toUpperCase()}`);\n","'use strict';\nvar token = '%[a-f0-9]{2}';\nvar singleMatcher = new RegExp(token, 'gi');\nvar multiMatcher = new RegExp('(' + token + ')+', 'gi');\n\nfunction decodeComponents(components, split) {\n\ttry {\n\t\t// Try to decode the entire string first\n\t\treturn decodeURIComponent(components.join(''));\n\t} catch (err) {\n\t\t// Do nothing\n\t}\n\n\tif (components.length === 1) {\n\t\treturn components;\n\t}\n\n\tsplit = split || 1;\n\n\t// Split the array in 2 parts\n\tvar left = components.slice(0, split);\n\tvar right = components.slice(split);\n\n\treturn Array.prototype.concat.call([], decodeComponents(left), decodeComponents(right));\n}\n\nfunction decode(input) {\n\ttry {\n\t\treturn decodeURIComponent(input);\n\t} catch (err) {\n\t\tvar tokens = input.match(singleMatcher);\n\n\t\tfor (var i = 1; i < tokens.length; i++) {\n\t\t\tinput = decodeComponents(tokens, i).join('');\n\n\t\t\ttokens = input.match(singleMatcher);\n\t\t}\n\n\t\treturn input;\n\t}\n}\n\nfunction customDecodeURIComponent(input) {\n\t// Keep track of all the replacements and prefill the map with the `BOM`\n\tvar replaceMap = {\n\t\t'%FE%FF': '\\uFFFD\\uFFFD',\n\t\t'%FF%FE': '\\uFFFD\\uFFFD'\n\t};\n\n\tvar match = multiMatcher.exec(input);\n\twhile (match) {\n\t\ttry {\n\t\t\t// Decode as big chunks as possible\n\t\t\treplaceMap[match[0]] = decodeURIComponent(match[0]);\n\t\t} catch (err) {\n\t\t\tvar result = decode(match[0]);\n\n\t\t\tif (result !== match[0]) {\n\t\t\t\treplaceMap[match[0]] = result;\n\t\t\t}\n\t\t}\n\n\t\tmatch = multiMatcher.exec(input);\n\t}\n\n\t// Add `%C2` at the end of the map to make sure it does not replace the combinator before everything else\n\treplaceMap['%C2'] = '\\uFFFD';\n\n\tvar entries = Object.keys(replaceMap);\n\n\tfor (var i = 0; i < entries.length; i++) {\n\t\t// Replace all decoded components\n\t\tvar key = entries[i];\n\t\tinput = input.replace(new RegExp(key, 'g'), replaceMap[key]);\n\t}\n\n\treturn input;\n}\n\nmodule.exports = function (encodedURI) {\n\tif (typeof encodedURI !== 'string') {\n\t\tthrow new TypeError('Expected `encodedURI` to be of type `string`, got `' + typeof encodedURI + '`');\n\t}\n\n\ttry {\n\t\tencodedURI = encodedURI.replace(/\\+/g, ' ');\n\n\t\t// Try the built in decoder first\n\t\treturn decodeURIComponent(encodedURI);\n\t} catch (err) {\n\t\t// Fallback to a more advanced decoder\n\t\treturn customDecodeURIComponent(encodedURI);\n\t}\n};\n","'use strict';\n\nmodule.exports = (string, separator) => {\n\tif (!(typeof string === 'string' && typeof separator === 'string')) {\n\t\tthrow new TypeError('Expected the arguments to be of type `string`');\n\t}\n\n\tif (separator === '') {\n\t\treturn [string];\n\t}\n\n\tconst separatorIndex = string.indexOf(separator);\n\n\tif (separatorIndex === -1) {\n\t\treturn [string];\n\t}\n\n\treturn [\n\t\tstring.slice(0, separatorIndex),\n\t\tstring.slice(separatorIndex + separator.length)\n\t];\n};\n","'use strict';\nmodule.exports = function (obj, predicate) {\n\tvar ret = {};\n\tvar keys = Object.keys(obj);\n\tvar isArr = Array.isArray(predicate);\n\n\tfor (var i = 0; i < keys.length; i++) {\n\t\tvar key = keys[i];\n\t\tvar val = obj[key];\n\n\t\tif (isArr ? predicate.indexOf(key) !== -1 : predicate(key, val, obj)) {\n\t\t\tret[key] = val;\n\t\t}\n\t}\n\n\treturn ret;\n};\n","'use strict';\nconst strictUriEncode = require('strict-uri-encode');\nconst decodeComponent = require('decode-uri-component');\nconst splitOnFirst = require('split-on-first');\nconst filterObject = require('filter-obj');\n\nconst isNullOrUndefined = value => value === null || value === undefined;\n\nconst encodeFragmentIdentifier = Symbol('encodeFragmentIdentifier');\n\nfunction encoderForArrayFormat(options) {\n\tswitch (options.arrayFormat) {\n\t\tcase 'index':\n\t\t\treturn key => (result, value) => {\n\t\t\t\tconst index = result.length;\n\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined ||\n\t\t\t\t\t(options.skipNull && value === null) ||\n\t\t\t\t\t(options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [...result, [encode(key, options), '[', index, ']'].join('')];\n\t\t\t\t}\n\n\t\t\t\treturn [\n\t\t\t\t\t...result,\n\t\t\t\t\t[encode(key, options), '[', encode(index, options), ']=', encode(value, options)].join('')\n\t\t\t\t];\n\t\t\t};\n\n\t\tcase 'bracket':\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined ||\n\t\t\t\t\t(options.skipNull && value === null) ||\n\t\t\t\t\t(options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [...result, [encode(key, options), '[]'].join('')];\n\t\t\t\t}\n\n\t\t\t\treturn [...result, [encode(key, options), '[]=', encode(value, options)].join('')];\n\t\t\t};\n\n\t\tcase 'colon-list-separator':\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined ||\n\t\t\t\t\t(options.skipNull && value === null) ||\n\t\t\t\t\t(options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [...result, [encode(key, options), ':list='].join('')];\n\t\t\t\t}\n\n\t\t\t\treturn [...result, [encode(key, options), ':list=', encode(value, options)].join('')];\n\t\t\t};\n\n\t\tcase 'comma':\n\t\tcase 'separator':\n\t\tcase 'bracket-separator': {\n\t\t\tconst keyValueSep = options.arrayFormat === 'bracket-separator' ?\n\t\t\t\t'[]=' :\n\t\t\t\t'=';\n\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined ||\n\t\t\t\t\t(options.skipNull && value === null) ||\n\t\t\t\t\t(options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\t// Translate null to an empty string so that it doesn't serialize as 'null'\n\t\t\t\tvalue = value === null ? '' : value;\n\n\t\t\t\tif (result.length === 0) {\n\t\t\t\t\treturn [[encode(key, options), keyValueSep, encode(value, options)].join('')];\n\t\t\t\t}\n\n\t\t\t\treturn [[result, encode(value, options)].join(options.arrayFormatSeparator)];\n\t\t\t};\n\t\t}\n\n\t\tdefault:\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined ||\n\t\t\t\t\t(options.skipNull && value === null) ||\n\t\t\t\t\t(options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [...result, encode(key, options)];\n\t\t\t\t}\n\n\t\t\t\treturn [...result, [encode(key, options), '=', encode(value, options)].join('')];\n\t\t\t};\n\t}\n}\n\nfunction parserForArrayFormat(options) {\n\tlet result;\n\n\tswitch (options.arrayFormat) {\n\t\tcase 'index':\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tresult = /\\[(\\d*)\\]$/.exec(key);\n\n\t\t\t\tkey = key.replace(/\\[\\d*\\]$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = {};\n\t\t\t\t}\n\n\t\t\t\taccumulator[key][result[1]] = value;\n\t\t\t};\n\n\t\tcase 'bracket':\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tresult = /(\\[\\])$/.exec(key);\n\t\t\t\tkey = key.replace(/\\[\\]$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = [value];\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [].concat(accumulator[key], value);\n\t\t\t};\n\n\t\tcase 'colon-list-separator':\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tresult = /(:list)$/.exec(key);\n\t\t\t\tkey = key.replace(/:list$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = [value];\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [].concat(accumulator[key], value);\n\t\t\t};\n\n\t\tcase 'comma':\n\t\tcase 'separator':\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tconst isArray = typeof value === 'string' && value.includes(options.arrayFormatSeparator);\n\t\t\t\tconst isEncodedArray = (typeof value === 'string' && !isArray && decode(value, options).includes(options.arrayFormatSeparator));\n\t\t\t\tvalue = isEncodedArray ? decode(value, options) : value;\n\t\t\t\tconst newValue = isArray || isEncodedArray ? value.split(options.arrayFormatSeparator).map(item => decode(item, options)) : value === null ? value : decode(value, options);\n\t\t\t\taccumulator[key] = newValue;\n\t\t\t};\n\n\t\tcase 'bracket-separator':\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tconst isArray = /(\\[\\])$/.test(key);\n\t\t\t\tkey = key.replace(/\\[\\]$/, '');\n\n\t\t\t\tif (!isArray) {\n\t\t\t\t\taccumulator[key] = value ? decode(value, options) : value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst arrayValue = value === null ?\n\t\t\t\t\t[] :\n\t\t\t\t\tvalue.split(options.arrayFormatSeparator).map(item => decode(item, options));\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = arrayValue;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [].concat(accumulator[key], arrayValue);\n\t\t\t};\n\n\t\tdefault:\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [].concat(accumulator[key], value);\n\t\t\t};\n\t}\n}\n\nfunction validateArrayFormatSeparator(value) {\n\tif (typeof value !== 'string' || value.length !== 1) {\n\t\tthrow new TypeError('arrayFormatSeparator must be single character string');\n\t}\n}\n\nfunction encode(value, options) {\n\tif (options.encode) {\n\t\treturn options.strict ? strictUriEncode(value) : encodeURIComponent(value);\n\t}\n\n\treturn value;\n}\n\nfunction decode(value, options) {\n\tif (options.decode) {\n\t\treturn decodeComponent(value);\n\t}\n\n\treturn value;\n}\n\nfunction keysSorter(input) {\n\tif (Array.isArray(input)) {\n\t\treturn input.sort();\n\t}\n\n\tif (typeof input === 'object') {\n\t\treturn keysSorter(Object.keys(input))\n\t\t\t.sort((a, b) => Number(a) - Number(b))\n\t\t\t.map(key => input[key]);\n\t}\n\n\treturn input;\n}\n\nfunction removeHash(input) {\n\tconst hashStart = input.indexOf('#');\n\tif (hashStart !== -1) {\n\t\tinput = input.slice(0, hashStart);\n\t}\n\n\treturn input;\n}\n\nfunction getHash(url) {\n\tlet hash = '';\n\tconst hashStart = url.indexOf('#');\n\tif (hashStart !== -1) {\n\t\thash = url.slice(hashStart);\n\t}\n\n\treturn hash;\n}\n\nfunction extract(input) {\n\tinput = removeHash(input);\n\tconst queryStart = input.indexOf('?');\n\tif (queryStart === -1) {\n\t\treturn '';\n\t}\n\n\treturn input.slice(queryStart + 1);\n}\n\nfunction parseValue(value, options) {\n\tif (options.parseNumbers && !Number.isNaN(Number(value)) && (typeof value === 'string' && value.trim() !== '')) {\n\t\tvalue = Number(value);\n\t} else if (options.parseBooleans && value !== null && (value.toLowerCase() === 'true' || value.toLowerCase() === 'false')) {\n\t\tvalue = value.toLowerCase() === 'true';\n\t}\n\n\treturn value;\n}\n\nfunction parse(query, options) {\n\toptions = Object.assign({\n\t\tdecode: true,\n\t\tsort: true,\n\t\tarrayFormat: 'none',\n\t\tarrayFormatSeparator: ',',\n\t\tparseNumbers: false,\n\t\tparseBooleans: false\n\t}, options);\n\n\tvalidateArrayFormatSeparator(options.arrayFormatSeparator);\n\n\tconst formatter = parserForArrayFormat(options);\n\n\t// Create an object with no prototype\n\tconst ret = Object.create(null);\n\n\tif (typeof query !== 'string') {\n\t\treturn ret;\n\t}\n\n\tquery = query.trim().replace(/^[?#&]/, '');\n\n\tif (!query) {\n\t\treturn ret;\n\t}\n\n\tfor (const param of query.split('&')) {\n\t\tif (param === '') {\n\t\t\tcontinue;\n\t\t}\n\n\t\tlet [key, value] = splitOnFirst(options.decode ? param.replace(/\\+/g, ' ') : param, '=');\n\n\t\t// Missing `=` should be `null`:\n\t\t// http://w3.org/TR/2012/WD-url-20120524/#collect-url-parameters\n\t\tvalue = value === undefined ? null : ['comma', 'separator', 'bracket-separator'].includes(options.arrayFormat) ? value : decode(value, options);\n\t\tformatter(decode(key, options), value, ret);\n\t}\n\n\tfor (const key of Object.keys(ret)) {\n\t\tconst value = ret[key];\n\t\tif (typeof value === 'object' && value !== null) {\n\t\t\tfor (const k of Object.keys(value)) {\n\t\t\t\tvalue[k] = parseValue(value[k], options);\n\t\t\t}\n\t\t} else {\n\t\t\tret[key] = parseValue(value, options);\n\t\t}\n\t}\n\n\tif (options.sort === false) {\n\t\treturn ret;\n\t}\n\n\treturn (options.sort === true ? Object.keys(ret).sort() : Object.keys(ret).sort(options.sort)).reduce((result, key) => {\n\t\tconst value = ret[key];\n\t\tif (Boolean(value) && typeof value === 'object' && !Array.isArray(value)) {\n\t\t\t// Sort object keys, not values\n\t\t\tresult[key] = keysSorter(value);\n\t\t} else {\n\t\t\tresult[key] = value;\n\t\t}\n\n\t\treturn result;\n\t}, Object.create(null));\n}\n\nexports.extract = extract;\nexports.parse = parse;\n\nexports.stringify = (object, options) => {\n\tif (!object) {\n\t\treturn '';\n\t}\n\n\toptions = Object.assign({\n\t\tencode: true,\n\t\tstrict: true,\n\t\tarrayFormat: 'none',\n\t\tarrayFormatSeparator: ','\n\t}, options);\n\n\tvalidateArrayFormatSeparator(options.arrayFormatSeparator);\n\n\tconst shouldFilter = key => (\n\t\t(options.skipNull && isNullOrUndefined(object[key])) ||\n\t\t(options.skipEmptyString && object[key] === '')\n\t);\n\n\tconst formatter = encoderForArrayFormat(options);\n\n\tconst objectCopy = {};\n\n\tfor (const key of Object.keys(object)) {\n\t\tif (!shouldFilter(key)) {\n\t\t\tobjectCopy[key] = object[key];\n\t\t}\n\t}\n\n\tconst keys = Object.keys(objectCopy);\n\n\tif (options.sort !== false) {\n\t\tkeys.sort(options.sort);\n\t}\n\n\treturn keys.map(key => {\n\t\tconst value = object[key];\n\n\t\tif (value === undefined) {\n\t\t\treturn '';\n\t\t}\n\n\t\tif (value === null) {\n\t\t\treturn encode(key, options);\n\t\t}\n\n\t\tif (Array.isArray(value)) {\n\t\t\tif (value.length === 0 && options.arrayFormat === 'bracket-separator') {\n\t\t\t\treturn encode(key, options) + '[]';\n\t\t\t}\n\n\t\t\treturn value\n\t\t\t\t.reduce(formatter(key), [])\n\t\t\t\t.join('&');\n\t\t}\n\n\t\treturn encode(key, options) + '=' + encode(value, options);\n\t}).filter(x => x.length > 0).join('&');\n};\n\nexports.parseUrl = (url, options) => {\n\toptions = Object.assign({\n\t\tdecode: true\n\t}, options);\n\n\tconst [url_, hash] = splitOnFirst(url, '#');\n\n\treturn Object.assign(\n\t\t{\n\t\t\turl: url_.split('?')[0] || '',\n\t\t\tquery: parse(extract(url), options)\n\t\t},\n\t\toptions && options.parseFragmentIdentifier && hash ? {fragmentIdentifier: decode(hash, options)} : {}\n\t);\n};\n\nexports.stringifyUrl = (object, options) => {\n\toptions = Object.assign({\n\t\tencode: true,\n\t\tstrict: true,\n\t\t[encodeFragmentIdentifier]: true\n\t}, options);\n\n\tconst url = removeHash(object.url).split('?')[0] || '';\n\tconst queryFromUrl = exports.extract(object.url);\n\tconst parsedQueryFromUrl = exports.parse(queryFromUrl, {sort: false});\n\n\tconst query = Object.assign(parsedQueryFromUrl, object.query);\n\tlet queryString = exports.stringify(query, options);\n\tif (queryString) {\n\t\tqueryString = `?${queryString}`;\n\t}\n\n\tlet hash = getHash(object.url);\n\tif (object.fragmentIdentifier) {\n\t\thash = `#${options[encodeFragmentIdentifier] ? encode(object.fragmentIdentifier, options) : object.fragmentIdentifier}`;\n\t}\n\n\treturn `${url}${queryString}${hash}`;\n};\n\nexports.pick = (input, filter, options) => {\n\toptions = Object.assign({\n\t\tparseFragmentIdentifier: true,\n\t\t[encodeFragmentIdentifier]: false\n\t}, options);\n\n\tconst {url, query, fragmentIdentifier} = exports.parseUrl(input, options);\n\treturn exports.stringifyUrl({\n\t\turl,\n\t\tquery: filterObject(query, filter),\n\t\tfragmentIdentifier\n\t}, options);\n};\n\nexports.exclude = (input, filter, options) => {\n\tconst exclusionFilter = Array.isArray(filter) ? key => !filter.includes(key) : (key, value) => !filter(key, value);\n\n\treturn exports.pick(input, exclusionFilter, options);\n};\n","import type { NextApiRequest, NextApiResponse, NextApiHandler } from \"next\";\nimport type {\n  Client,\n  ClientMap,\n  CreateContext,\n  Handler,\n  HandlerMap,\n  Middleware,\n  ZO,\n} from \"../types/coreTypes\";\nimport { z } from \"zod\";\nimport querystring from \"query-string\";\n\nconst ClientMap: ClientMap<ZO, ZO> = new Map([\n  [\n    \"get\",\n    ({ apiUrl, path, inputShape, outputShape }) =>\n      async (input) => {\n        const reqInput = inputShape.parse(input);\n        const output = await fetch(\n          apiUrl +\n            path +\n            \"?\" +\n            querystring.stringify(reqInput, { encode: true }),\n          {\n            method: \"GET\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n            },\n          }\n        );\n        return outputShape.parse(await output.json());\n      },\n  ],\n  [\n    \"post\",\n    ({ apiUrl, path, inputShape, outputShape }) =>\n      async (input) => {\n        const reqInput = inputShape.parse(input);\n        const res = await fetch(apiUrl + path, {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify(reqInput),\n        });\n        const reqOutput = await res.json();\n        return outputShape.parse(reqOutput);\n      },\n  ],\n]);\n\nconst HandlerMap: HandlerMap<ZO, ZO, ZO> = new Map([\n  [\n    \"get\",\n    ({ inputShape, outputShape, context, handler }) =>\n      async (req, res) => {\n        const input = inputShape.parse(req.query);\n        const output = await handler({ req, res, context, input });\n        res.status(200).json(outputShape.parse(output));\n      },\n  ],\n  [\n    \"post\",\n    ({ inputShape, outputShape, context, handler }) =>\n      async (req, res) => {\n        const input = inputShape.parse(req.body);\n        const output = await handler({ req, res, context, input });\n        res.status(200).json(outputShape.parse(output));\n      },\n  ],\n]);\n\nconst Router = <C extends ZO>({\n  contextShape,\n  apiUrl = \"/api/\",\n}: {\n  contextShape: C;\n  apiUrl?: string;\n}) => {\n  let createContext: CreateContext<z.infer<C>>;\n  const context = (create: CreateContext<z.infer<C>>) => {\n    createContext = create;\n  };\n  const getCreateContext = () => {\n    if (!createContext) {\n      throw new Error(\"createContext not set\");\n    }\n    return createContext;\n  };\n  const methodClients = (clients: ClientMap<ZO, ZO>) => {\n    for (const [method, client] of clients) {\n      ClientMap.set(method, client);\n    }\n  };\n  const methodHandlers = (handlers: HandlerMap<ZO, ZO, ZO>) => {\n    for (const [method, handler] of handlers) {\n      HandlerMap.set(method, handler);\n    }\n  };\n  const route = <I extends ZO, O extends ZO>({\n    method,\n    path,\n    inputShape,\n    outputShape,\n  }: {\n    method: \"get\" | \"post\";\n    path: string;\n    inputShape: I;\n    outputShape: O;\n  }) => {\n    let routeMiddleware: Middleware[] = [];\n\n    const middleware = (...fns: Middleware[]) => {\n      routeMiddleware = [...routeMiddleware, ...fns];\n    };\n\n    const clientShape = z\n      .function()\n      .args(inputShape)\n      .returns(z.promise(outputShape));\n\n    const serviceShape = z\n      .function()\n      .args(\n        z.object({\n          input: inputShape,\n          context: contextShape,\n          req: z.any(),\n          res: z.any(),\n        })\n      )\n      .returns(z.promise(outputShape));\n\n    const methodHandler = HandlerMap.get(method) ?? HandlerMap.get(\"post\")!;\n\n    const handler = (h: Handler<C, I, O>): NextApiHandler<z.infer<O>> => {\n      return async (req: NextApiRequest, res: NextApiResponse<z.infer<O>>) => {\n        for (const m of routeMiddleware || []) {\n          await m(req, res);\n        }\n\n        const context = await getCreateContext()(req, res);\n\n        if (!context) {\n          res.status(500).json({ status: \"error\", message: \"no context\" });\n          return;\n        }\n        return methodHandler({\n          inputShape,\n          outputShape,\n          context: await createContext(req, res),\n          handler: h as any,\n        })(req, res);\n      };\n    };\n\n    const client = (): Client<I, O> => {\n      const c = (ClientMap.get(method) ?? ClientMap.get(\"post\")!)({\n        apiUrl,\n        path,\n        inputShape,\n        outputShape,\n      });\n      return c as any;\n    };\n\n    return {\n      apiUrl,\n      path,\n      routeMiddleware,\n      inputShape,\n      outputShape,\n      clientShape,\n      serviceShape,\n      contextShape,\n      handler,\n      client,\n      middleware,\n    };\n  };\n  return { route, context, methodHandlers, methodClients };\n};\n\ntype Router = ReturnType<typeof Router>;\n\nexport default Router;\n","import type { FC, ReactNode } from \"react\";\nimport { Clients } from \"../types/coreTypes\";\nimport type { Router } from \"../router\";\nimport React, { useEffect, useRef } from \"react\";\n\nconst RouterContextProvider: FC<{\n  children: ReactNode;\n  router?: Router;\n  clients?: Clients;\n}> = ({ children, clients, router }) => {\n  const mounted = useRef(false);\n  useEffect(() => {\n    if (!mounted.current && clients && router) {\n      mounted.current = true;\n      router.methodClients(clients);\n    }\n  }, [router, clients]);\n  return <>{children}</>;\n};\n\nexport default RouterContextProvider;\n","import { useCallback, useState } from \"react\";\n\nconst useRoute = <C extends (i: any) => Promise<any>>(client: C) => {\n  const [data, setData] = useState<Awaited<ReturnType<C>>>();\n  const [error, setError] = useState<Error>();\n  const [loading, setLoading] = useState(false);\n  const callRoute = useCallback(\n    async (input: Parameters<C>[0]) => {\n      setLoading(true);\n      let res: Awaited<ReturnType<C>> | undefined = undefined;\n      try {\n        res = await client(input);\n        setData(res);\n      } catch (e: any) {\n        setError(e);\n      } finally {\n        setLoading(false);\n        return res;\n      }\n    },\n    [client]\n  );\n  return [callRoute, { data, error, loading }] as const;\n};\n\nexport default useRoute;\n"],"names":["ls","localStorage","routeCache","atomFamily","key","default","effects","setSelf","onSet","node","item","getItem","JSON","parse","newItem","DefaultValue","removeItem","setItem","stringify","routeLoading","selectorFamily","get","loading","set","prev","routeError","error","routeData","data","strictUriEncode","str","encodeURIComponent","replace","x","charCodeAt","toString","toUpperCase","singleMatcher","RegExp","multiMatcher","decodeComponents","components","split","decodeURIComponent","join","err","length","left","slice","right","Array","prototype","concat","call","decode","input","tokens","match","i","decodeUriComponent","encodedURI","TypeError","replaceMap","exec","result","entries","Object","keys","customDecodeURIComponent","splitOnFirst","string","separator","separatorIndex","indexOf","filterObj","obj","predicate","ret","isArr","isArray","val","require$$0","decodeComponent","require$$1","require$$2","filterObject","require$$3","encodeFragmentIdentifier","Symbol","validateArrayFormatSeparator","value","encode","options","strict","keysSorter","sort","a","b","Number","map","removeHash","hashStart","extract","queryStart","parseValue","parseNumbers","isNaN","trim","parseBooleans","toLowerCase","query","assign","arrayFormat","arrayFormatSeparator","formatter","accumulator","undefined","includes","isEncodedArray","newValue","test","arrayValue","parserForArrayFormat","create","param","k","reduce","Boolean","exports","object","shouldFilter","skipNull","skipEmptyString","index","keyValueSep","encoderForArrayFormat","objectCopy","filter","parseUrl","url","url_","hash","parseFragmentIdentifier","fragmentIdentifier","stringifyUrl","queryFromUrl","parsedQueryFromUrl","queryString","getHash","pick","exclude","exclusionFilter","ClientMap","Map","apiUrl","path","inputShape","outputShape","async","reqInput","output","fetch","querystring","method","headers","json","res","body","reqOutput","HandlerMap","context","handler","req","status","contextShape","createContext","route","routeMiddleware","clientShape","z","function","args","returns","promise","serviceShape","any","methodHandler","h","m","Error","getCreateContext","message","client","middleware","fns","methodHandlers","handlers","methodClients","clients","children","router","mounted","useRef","useEffect","current","React","createElement","Fragment","name","setData","useRecoilState","setError","setLoading","useCallback","e","useState"],"mappings":"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"}