{"version":3,"file":"index.js","sources":["../../node_modules/strict-uri-encode/index.js","../../node_modules/decode-uri-component/index.js","../../node_modules/split-on-first/index.js","../../node_modules/filter-obj/index.js","../../node_modules/query-string/index.js","../../src/router/router.ts"],"sourcesContent":["'use strict';\nmodule.exports = str => encodeURIComponent(str).replace(/[!'()*]/g, x => `%${x.charCodeAt(0).toString(16).toUpperCase()}`);\n","'use strict';\nvar token = '%[a-f0-9]{2}';\nvar singleMatcher = new RegExp(token, 'gi');\nvar multiMatcher = new RegExp('(' + token + ')+', 'gi');\n\nfunction decodeComponents(components, split) {\n\ttry {\n\t\t// Try to decode the entire string first\n\t\treturn decodeURIComponent(components.join(''));\n\t} catch (err) {\n\t\t// Do nothing\n\t}\n\n\tif (components.length === 1) {\n\t\treturn components;\n\t}\n\n\tsplit = split || 1;\n\n\t// Split the array in 2 parts\n\tvar left = components.slice(0, split);\n\tvar right = components.slice(split);\n\n\treturn Array.prototype.concat.call([], decodeComponents(left), decodeComponents(right));\n}\n\nfunction decode(input) {\n\ttry {\n\t\treturn decodeURIComponent(input);\n\t} catch (err) {\n\t\tvar tokens = input.match(singleMatcher);\n\n\t\tfor (var i = 1; i < tokens.length; i++) {\n\t\t\tinput = decodeComponents(tokens, i).join('');\n\n\t\t\ttokens = input.match(singleMatcher);\n\t\t}\n\n\t\treturn input;\n\t}\n}\n\nfunction customDecodeURIComponent(input) {\n\t// Keep track of all the replacements and prefill the map with the `BOM`\n\tvar replaceMap = {\n\t\t'%FE%FF': '\\uFFFD\\uFFFD',\n\t\t'%FF%FE': '\\uFFFD\\uFFFD'\n\t};\n\n\tvar match = multiMatcher.exec(input);\n\twhile (match) {\n\t\ttry {\n\t\t\t// Decode as big chunks as possible\n\t\t\treplaceMap[match[0]] = decodeURIComponent(match[0]);\n\t\t} catch (err) {\n\t\t\tvar result = decode(match[0]);\n\n\t\t\tif (result !== match[0]) {\n\t\t\t\treplaceMap[match[0]] = result;\n\t\t\t}\n\t\t}\n\n\t\tmatch = multiMatcher.exec(input);\n\t}\n\n\t// Add `%C2` at the end of the map to make sure it does not replace the combinator before everything else\n\treplaceMap['%C2'] = '\\uFFFD';\n\n\tvar entries = Object.keys(replaceMap);\n\n\tfor (var i = 0; i < entries.length; i++) {\n\t\t// Replace all decoded components\n\t\tvar key = entries[i];\n\t\tinput = input.replace(new RegExp(key, 'g'), replaceMap[key]);\n\t}\n\n\treturn input;\n}\n\nmodule.exports = function (encodedURI) {\n\tif (typeof encodedURI !== 'string') {\n\t\tthrow new TypeError('Expected `encodedURI` to be of type `string`, got `' + typeof encodedURI + '`');\n\t}\n\n\ttry {\n\t\tencodedURI = encodedURI.replace(/\\+/g, ' ');\n\n\t\t// Try the built in decoder first\n\t\treturn decodeURIComponent(encodedURI);\n\t} catch (err) {\n\t\t// Fallback to a more advanced decoder\n\t\treturn customDecodeURIComponent(encodedURI);\n\t}\n};\n","'use strict';\n\nmodule.exports = (string, separator) => {\n\tif (!(typeof string === 'string' && typeof separator === 'string')) {\n\t\tthrow new TypeError('Expected the arguments to be of type `string`');\n\t}\n\n\tif (separator === '') {\n\t\treturn [string];\n\t}\n\n\tconst separatorIndex = string.indexOf(separator);\n\n\tif (separatorIndex === -1) {\n\t\treturn [string];\n\t}\n\n\treturn [\n\t\tstring.slice(0, separatorIndex),\n\t\tstring.slice(separatorIndex + separator.length)\n\t];\n};\n","'use strict';\nmodule.exports = function (obj, predicate) {\n\tvar ret = {};\n\tvar keys = Object.keys(obj);\n\tvar isArr = Array.isArray(predicate);\n\n\tfor (var i = 0; i < keys.length; i++) {\n\t\tvar key = keys[i];\n\t\tvar val = obj[key];\n\n\t\tif (isArr ? predicate.indexOf(key) !== -1 : predicate(key, val, obj)) {\n\t\t\tret[key] = val;\n\t\t}\n\t}\n\n\treturn ret;\n};\n","'use strict';\nconst strictUriEncode = require('strict-uri-encode');\nconst decodeComponent = require('decode-uri-component');\nconst splitOnFirst = require('split-on-first');\nconst filterObject = require('filter-obj');\n\nconst isNullOrUndefined = value => value === null || value === undefined;\n\nconst encodeFragmentIdentifier = Symbol('encodeFragmentIdentifier');\n\nfunction encoderForArrayFormat(options) {\n\tswitch (options.arrayFormat) {\n\t\tcase 'index':\n\t\t\treturn key => (result, value) => {\n\t\t\t\tconst index = result.length;\n\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined ||\n\t\t\t\t\t(options.skipNull && value === null) ||\n\t\t\t\t\t(options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [...result, [encode(key, options), '[', index, ']'].join('')];\n\t\t\t\t}\n\n\t\t\t\treturn [\n\t\t\t\t\t...result,\n\t\t\t\t\t[encode(key, options), '[', encode(index, options), ']=', encode(value, options)].join('')\n\t\t\t\t];\n\t\t\t};\n\n\t\tcase 'bracket':\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined ||\n\t\t\t\t\t(options.skipNull && value === null) ||\n\t\t\t\t\t(options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [...result, [encode(key, options), '[]'].join('')];\n\t\t\t\t}\n\n\t\t\t\treturn [...result, [encode(key, options), '[]=', encode(value, options)].join('')];\n\t\t\t};\n\n\t\tcase 'colon-list-separator':\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined ||\n\t\t\t\t\t(options.skipNull && value === null) ||\n\t\t\t\t\t(options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [...result, [encode(key, options), ':list='].join('')];\n\t\t\t\t}\n\n\t\t\t\treturn [...result, [encode(key, options), ':list=', encode(value, options)].join('')];\n\t\t\t};\n\n\t\tcase 'comma':\n\t\tcase 'separator':\n\t\tcase 'bracket-separator': {\n\t\t\tconst keyValueSep = options.arrayFormat === 'bracket-separator' ?\n\t\t\t\t'[]=' :\n\t\t\t\t'=';\n\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined ||\n\t\t\t\t\t(options.skipNull && value === null) ||\n\t\t\t\t\t(options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\t// Translate null to an empty string so that it doesn't serialize as 'null'\n\t\t\t\tvalue = value === null ? '' : value;\n\n\t\t\t\tif (result.length === 0) {\n\t\t\t\t\treturn [[encode(key, options), keyValueSep, encode(value, options)].join('')];\n\t\t\t\t}\n\n\t\t\t\treturn [[result, encode(value, options)].join(options.arrayFormatSeparator)];\n\t\t\t};\n\t\t}\n\n\t\tdefault:\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined ||\n\t\t\t\t\t(options.skipNull && value === null) ||\n\t\t\t\t\t(options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [...result, encode(key, options)];\n\t\t\t\t}\n\n\t\t\t\treturn [...result, [encode(key, options), '=', encode(value, options)].join('')];\n\t\t\t};\n\t}\n}\n\nfunction parserForArrayFormat(options) {\n\tlet result;\n\n\tswitch (options.arrayFormat) {\n\t\tcase 'index':\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tresult = /\\[(\\d*)\\]$/.exec(key);\n\n\t\t\t\tkey = key.replace(/\\[\\d*\\]$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = {};\n\t\t\t\t}\n\n\t\t\t\taccumulator[key][result[1]] = value;\n\t\t\t};\n\n\t\tcase 'bracket':\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tresult = /(\\[\\])$/.exec(key);\n\t\t\t\tkey = key.replace(/\\[\\]$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = [value];\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [].concat(accumulator[key], value);\n\t\t\t};\n\n\t\tcase 'colon-list-separator':\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tresult = /(:list)$/.exec(key);\n\t\t\t\tkey = key.replace(/:list$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = [value];\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [].concat(accumulator[key], value);\n\t\t\t};\n\n\t\tcase 'comma':\n\t\tcase 'separator':\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tconst isArray = typeof value === 'string' && value.includes(options.arrayFormatSeparator);\n\t\t\t\tconst isEncodedArray = (typeof value === 'string' && !isArray && decode(value, options).includes(options.arrayFormatSeparator));\n\t\t\t\tvalue = isEncodedArray ? decode(value, options) : value;\n\t\t\t\tconst newValue = isArray || isEncodedArray ? value.split(options.arrayFormatSeparator).map(item => decode(item, options)) : value === null ? value : decode(value, options);\n\t\t\t\taccumulator[key] = newValue;\n\t\t\t};\n\n\t\tcase 'bracket-separator':\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tconst isArray = /(\\[\\])$/.test(key);\n\t\t\t\tkey = key.replace(/\\[\\]$/, '');\n\n\t\t\t\tif (!isArray) {\n\t\t\t\t\taccumulator[key] = value ? decode(value, options) : value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst arrayValue = value === null ?\n\t\t\t\t\t[] :\n\t\t\t\t\tvalue.split(options.arrayFormatSeparator).map(item => decode(item, options));\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = arrayValue;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [].concat(accumulator[key], arrayValue);\n\t\t\t};\n\n\t\tdefault:\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [].concat(accumulator[key], value);\n\t\t\t};\n\t}\n}\n\nfunction validateArrayFormatSeparator(value) {\n\tif (typeof value !== 'string' || value.length !== 1) {\n\t\tthrow new TypeError('arrayFormatSeparator must be single character string');\n\t}\n}\n\nfunction encode(value, options) {\n\tif (options.encode) {\n\t\treturn options.strict ? strictUriEncode(value) : encodeURIComponent(value);\n\t}\n\n\treturn value;\n}\n\nfunction decode(value, options) {\n\tif (options.decode) {\n\t\treturn decodeComponent(value);\n\t}\n\n\treturn value;\n}\n\nfunction keysSorter(input) {\n\tif (Array.isArray(input)) {\n\t\treturn input.sort();\n\t}\n\n\tif (typeof input === 'object') {\n\t\treturn keysSorter(Object.keys(input))\n\t\t\t.sort((a, b) => Number(a) - Number(b))\n\t\t\t.map(key => input[key]);\n\t}\n\n\treturn input;\n}\n\nfunction removeHash(input) {\n\tconst hashStart = input.indexOf('#');\n\tif (hashStart !== -1) {\n\t\tinput = input.slice(0, hashStart);\n\t}\n\n\treturn input;\n}\n\nfunction getHash(url) {\n\tlet hash = '';\n\tconst hashStart = url.indexOf('#');\n\tif (hashStart !== -1) {\n\t\thash = url.slice(hashStart);\n\t}\n\n\treturn hash;\n}\n\nfunction extract(input) {\n\tinput = removeHash(input);\n\tconst queryStart = input.indexOf('?');\n\tif (queryStart === -1) {\n\t\treturn '';\n\t}\n\n\treturn input.slice(queryStart + 1);\n}\n\nfunction parseValue(value, options) {\n\tif (options.parseNumbers && !Number.isNaN(Number(value)) && (typeof value === 'string' && value.trim() !== '')) {\n\t\tvalue = Number(value);\n\t} else if (options.parseBooleans && value !== null && (value.toLowerCase() === 'true' || value.toLowerCase() === 'false')) {\n\t\tvalue = value.toLowerCase() === 'true';\n\t}\n\n\treturn value;\n}\n\nfunction parse(query, options) {\n\toptions = Object.assign({\n\t\tdecode: true,\n\t\tsort: true,\n\t\tarrayFormat: 'none',\n\t\tarrayFormatSeparator: ',',\n\t\tparseNumbers: false,\n\t\tparseBooleans: false\n\t}, options);\n\n\tvalidateArrayFormatSeparator(options.arrayFormatSeparator);\n\n\tconst formatter = parserForArrayFormat(options);\n\n\t// Create an object with no prototype\n\tconst ret = Object.create(null);\n\n\tif (typeof query !== 'string') {\n\t\treturn ret;\n\t}\n\n\tquery = query.trim().replace(/^[?#&]/, '');\n\n\tif (!query) {\n\t\treturn ret;\n\t}\n\n\tfor (const param of query.split('&')) {\n\t\tif (param === '') {\n\t\t\tcontinue;\n\t\t}\n\n\t\tlet [key, value] = splitOnFirst(options.decode ? param.replace(/\\+/g, ' ') : param, '=');\n\n\t\t// Missing `=` should be `null`:\n\t\t// http://w3.org/TR/2012/WD-url-20120524/#collect-url-parameters\n\t\tvalue = value === undefined ? null : ['comma', 'separator', 'bracket-separator'].includes(options.arrayFormat) ? value : decode(value, options);\n\t\tformatter(decode(key, options), value, ret);\n\t}\n\n\tfor (const key of Object.keys(ret)) {\n\t\tconst value = ret[key];\n\t\tif (typeof value === 'object' && value !== null) {\n\t\t\tfor (const k of Object.keys(value)) {\n\t\t\t\tvalue[k] = parseValue(value[k], options);\n\t\t\t}\n\t\t} else {\n\t\t\tret[key] = parseValue(value, options);\n\t\t}\n\t}\n\n\tif (options.sort === false) {\n\t\treturn ret;\n\t}\n\n\treturn (options.sort === true ? Object.keys(ret).sort() : Object.keys(ret).sort(options.sort)).reduce((result, key) => {\n\t\tconst value = ret[key];\n\t\tif (Boolean(value) && typeof value === 'object' && !Array.isArray(value)) {\n\t\t\t// Sort object keys, not values\n\t\t\tresult[key] = keysSorter(value);\n\t\t} else {\n\t\t\tresult[key] = value;\n\t\t}\n\n\t\treturn result;\n\t}, Object.create(null));\n}\n\nexports.extract = extract;\nexports.parse = parse;\n\nexports.stringify = (object, options) => {\n\tif (!object) {\n\t\treturn '';\n\t}\n\n\toptions = Object.assign({\n\t\tencode: true,\n\t\tstrict: true,\n\t\tarrayFormat: 'none',\n\t\tarrayFormatSeparator: ','\n\t}, options);\n\n\tvalidateArrayFormatSeparator(options.arrayFormatSeparator);\n\n\tconst shouldFilter = key => (\n\t\t(options.skipNull && isNullOrUndefined(object[key])) ||\n\t\t(options.skipEmptyString && object[key] === '')\n\t);\n\n\tconst formatter = encoderForArrayFormat(options);\n\n\tconst objectCopy = {};\n\n\tfor (const key of Object.keys(object)) {\n\t\tif (!shouldFilter(key)) {\n\t\t\tobjectCopy[key] = object[key];\n\t\t}\n\t}\n\n\tconst keys = Object.keys(objectCopy);\n\n\tif (options.sort !== false) {\n\t\tkeys.sort(options.sort);\n\t}\n\n\treturn keys.map(key => {\n\t\tconst value = object[key];\n\n\t\tif (value === undefined) {\n\t\t\treturn '';\n\t\t}\n\n\t\tif (value === null) {\n\t\t\treturn encode(key, options);\n\t\t}\n\n\t\tif (Array.isArray(value)) {\n\t\t\tif (value.length === 0 && options.arrayFormat === 'bracket-separator') {\n\t\t\t\treturn encode(key, options) + '[]';\n\t\t\t}\n\n\t\t\treturn value\n\t\t\t\t.reduce(formatter(key), [])\n\t\t\t\t.join('&');\n\t\t}\n\n\t\treturn encode(key, options) + '=' + encode(value, options);\n\t}).filter(x => x.length > 0).join('&');\n};\n\nexports.parseUrl = (url, options) => {\n\toptions = Object.assign({\n\t\tdecode: true\n\t}, options);\n\n\tconst [url_, hash] = splitOnFirst(url, '#');\n\n\treturn Object.assign(\n\t\t{\n\t\t\turl: url_.split('?')[0] || '',\n\t\t\tquery: parse(extract(url), options)\n\t\t},\n\t\toptions && options.parseFragmentIdentifier && hash ? {fragmentIdentifier: decode(hash, options)} : {}\n\t);\n};\n\nexports.stringifyUrl = (object, options) => {\n\toptions = Object.assign({\n\t\tencode: true,\n\t\tstrict: true,\n\t\t[encodeFragmentIdentifier]: true\n\t}, options);\n\n\tconst url = removeHash(object.url).split('?')[0] || '';\n\tconst queryFromUrl = exports.extract(object.url);\n\tconst parsedQueryFromUrl = exports.parse(queryFromUrl, {sort: false});\n\n\tconst query = Object.assign(parsedQueryFromUrl, object.query);\n\tlet queryString = exports.stringify(query, options);\n\tif (queryString) {\n\t\tqueryString = `?${queryString}`;\n\t}\n\n\tlet hash = getHash(object.url);\n\tif (object.fragmentIdentifier) {\n\t\thash = `#${options[encodeFragmentIdentifier] ? encode(object.fragmentIdentifier, options) : object.fragmentIdentifier}`;\n\t}\n\n\treturn `${url}${queryString}${hash}`;\n};\n\nexports.pick = (input, filter, options) => {\n\toptions = Object.assign({\n\t\tparseFragmentIdentifier: true,\n\t\t[encodeFragmentIdentifier]: false\n\t}, options);\n\n\tconst {url, query, fragmentIdentifier} = exports.parseUrl(input, options);\n\treturn exports.stringifyUrl({\n\t\turl,\n\t\tquery: filterObject(query, filter),\n\t\tfragmentIdentifier\n\t}, options);\n};\n\nexports.exclude = (input, filter, options) => {\n\tconst exclusionFilter = Array.isArray(filter) ? key => !filter.includes(key) : (key, value) => !filter(key, value);\n\n\treturn exports.pick(input, exclusionFilter, options);\n};\n","import type { NextApiRequest, NextApiResponse, NextApiHandler } from \"next\";\nimport type {\n  Client,\n  ClientMap,\n  CreateContext,\n  Handler,\n  HandlerMap,\n  Method,\n  Middleware,\n  ZO,\n} from \"../types/coreTypes\";\nimport { z } from \"zod\";\nimport querystring from \"query-string\";\n\nconst ClientMap: ClientMap<ZO, ZO> = new Map([\n  [\n    \"get\",\n    ({ apiUrl, path, inputShape, outputShape }) =>\n      async (input) => {\n        const reqInput = await inputShape.safeParseAsync(input);\n        const output = await fetch(\n          apiUrl +\n            path +\n            \"?\" +\n            querystring.stringify(reqInput, { encode: true }),\n          {\n            method: \"GET\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n            },\n          }\n        );\n        return await outputShape.safeParseAsync(await output.json());\n      },\n  ],\n  [\n    \"post\",\n    ({ apiUrl, path, inputShape, outputShape }) =>\n      async (input) => {\n        const reqInput = await inputShape.safeParseAsync(input);\n        const res = await fetch(apiUrl + path, {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify(reqInput),\n        });\n        const reqOutput = await res.json();\n        return await outputShape.safeParseAsync(reqOutput);\n      },\n  ],\n]);\n\nconst HandlerMap: HandlerMap<ZO, ZO, ZO> = new Map([\n  [\n    \"get\",\n    ({ inputShape, outputShape, context, handler }) =>\n      async (req, res) => {\n        const input = await inputShape.safeParseAsync(req.query);\n        const output = await handler({ req, res, context, input });\n        res.status(200).json(await outputShape.safeParseAsync(output));\n      },\n  ],\n  [\n    \"post\",\n    ({ inputShape, outputShape, context, handler }) =>\n      async (req, res) => {\n        const input = await inputShape.safeParseAsync(req.body);\n        const output = await handler({ req, res, context, input });\n        res.status(200).json(await outputShape.safeParseAsync(output));\n      },\n  ],\n]);\n\nconst Router = <C extends ZO>({\n  contextShape,\n  apiUrl = \"/api\",\n}: {\n  contextShape: C;\n  apiUrl?: string;\n}) => {\n  let createContext: CreateContext<z.infer<C>>;\n  const context = (create: CreateContext<z.infer<C>>) => {\n    createContext = create;\n  };\n  const getCreateContext = () => {\n    if (!createContext) {\n      throw new Error(\"createContext not set\");\n    }\n    return createContext;\n  };\n  const methodClients = (clients: ClientMap<ZO, ZO>) => {\n    for (const [method, client] of clients) {\n      ClientMap.set(method, client);\n    }\n  };\n  const methodHandlers = (handlers: HandlerMap<ZO, ZO, ZO>) => {\n    for (const [method, handler] of handlers) {\n      HandlerMap.set(method, handler);\n    }\n  };\n  const route = <I extends ZO, O extends ZO>({\n    method,\n    path,\n    inputShape,\n    outputShape,\n  }: {\n    method: Method;\n    path: string;\n    inputShape: I;\n    outputShape: O;\n  }) => {\n    let routeMiddleware: Middleware[] = [];\n\n    const middleware = (...fns: Middleware[]) => {\n      routeMiddleware = [...routeMiddleware, ...fns];\n    };\n\n    const methodHandler = HandlerMap.get(method) ?? HandlerMap.get(\"post\")!;\n\n    const handler = (h: Handler<C, I, O>): NextApiHandler<z.infer<O>> => {\n      return async (req: NextApiRequest, res: NextApiResponse<z.infer<O>>) => {\n        for (const m of routeMiddleware || []) {\n          await m(req, res);\n        }\n\n        const context = await getCreateContext()(req, res);\n\n        if (!context) {\n          res.status(500).json({ status: \"error\", message: \"no context\" });\n          return;\n        }\n        return methodHandler({\n          inputShape,\n          outputShape,\n          context: await createContext(req, res),\n          handler: h as any,\n        })(req, res);\n      };\n    };\n\n    const client = () => {\n      const c = (ClientMap.get(method) ?? ClientMap.get(\"post\")!)({\n        apiUrl,\n        path,\n        inputShape,\n        outputShape,\n      });\n      return c as unknown as Client<I, O>;\n    };\n\n    return {\n      apiUrl,\n      path,\n      routeMiddleware,\n      inputShape,\n      outputShape,\n      contextShape,\n      handler,\n      client,\n      middleware,\n    };\n  };\n  return { route, context, methodHandlers, methodClients };\n};\n\ntype Router = ReturnType<typeof Router>;\n\nexport default Router;\n"],"names":["strictUriEncode","str","encodeURIComponent","replace","x","charCodeAt","toString","toUpperCase","singleMatcher","RegExp","multiMatcher","decodeComponents","components","split","decodeURIComponent","join","err","length","left","slice","right","Array","prototype","concat","call","decode","input","tokens","match","i","decodeUriComponent","encodedURI","TypeError","replaceMap","exec","result","entries","Object","keys","key","customDecodeURIComponent","splitOnFirst","string","separator","separatorIndex","indexOf","filterObj","obj","predicate","ret","isArr","isArray","val","require$$0","decodeComponent","require$$1","require$$2","filterObject","require$$3","encodeFragmentIdentifier","Symbol","validateArrayFormatSeparator","value","encode","options","strict","keysSorter","sort","a","b","Number","map","removeHash","hashStart","extract","queryStart","parseValue","parseNumbers","isNaN","trim","parseBooleans","toLowerCase","parse","query","assign","arrayFormat","arrayFormatSeparator","formatter","accumulator","undefined","includes","isEncodedArray","newValue","item","test","arrayValue","parserForArrayFormat","create","param","k","reduce","Boolean","exports","stringify","object","shouldFilter","skipNull","skipEmptyString","index","keyValueSep","encoderForArrayFormat","objectCopy","filter","parseUrl","url","url_","hash","parseFragmentIdentifier","fragmentIdentifier","stringifyUrl","queryFromUrl","parsedQueryFromUrl","queryString","getHash","pick","exclude","exclusionFilter","ClientMap","Map","apiUrl","path","inputShape","outputShape","async","reqInput","safeParseAsync","output","fetch","querystring","method","headers","json","res","body","JSON","reqOutput","HandlerMap","context","handler","req","status","Router","contextShape","createContext","route","routeMiddleware","methodHandler","get","h","m","Error","getCreateContext","message","client","middleware","fns","methodHandlers","handlers","set","methodClients","clients"],"mappings":"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"}